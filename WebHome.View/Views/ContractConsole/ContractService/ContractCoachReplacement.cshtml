
@using System.IO
@using System.Linq.Expressions

@using WebHome.Helper
@using WebHome.Helper.DataOperation
@using WebHome.Models.Locale
@using WebHome.Models.ViewModel
@using WebHome.Models.DataEntity
@using WebHome.Controllers
@using Microsoft.AspNetCore.Mvc.ModelBinding
@using Newtonsoft.Json
@{

    ModelStateDictionary _modelState;
    ModelSource<UserProfile> models;
    CourseContract _model;
    UserProfile _profile;

    _modelState = ViewContext.ModelState;
    models = (ModelSource<UserProfile>)ViewContext.HttpContext.Items["Models"];;
    _model = (CourseContract)this.Model;
    _profile = await Context.GetUserAsync();
}
@{ 
    CourseContract currentItem = models.GetTable<CourseContractRevision>()
                                       .Where(c => c.OriginalContract == _model.ContractID)
                                       .Where(r => r.Reason == "轉換體能顧問")
                                       .Select(r => r.CourseContract)
                                       .Where(c => c.Status < (int)Naming.CourseContractStatus.已生效)
                                       .FirstOrDefault();
    bool applicable = true;
}

<div class="body">
    <div class="row">
        <div class="col-8">
            <h5 class="m-t-0">轉換體能顧問</h5>
            @if (_model.Status.In((int)Naming.CourseContractStatus.已終止, (int)Naming.CourseContractStatus.已履行))
            {
                applicable = false;
                <span class="col-red"><i class="zmdi zmdi-block"></i>合約@((Naming.CourseContractStatus)_model.Status)</span><br />
            }
            @if (_model.IsContractServiceInProgress(models))
            {
                applicable = false;
                <span class="col-red"><i class="zmdi zmdi-block"></i>服務申請進行中</span><br />
            }
            @if (_model.FitnessConsultant == _profile.UID)
            {
                applicable = false;
            }
            else if (_model.ContractPayment.Any())
            {
                if (!models.GetTable<CoachWorkplace>().Where(c => c.CoachID == _profile.UID)
                    .Where(c => c.BranchID == _model.CourseContractExtension.BranchID)
                    .Any())
                {
                    applicable = false;
                    <span class="col-red"><i class="zmdi zmdi-block"></i>已收款，禁止跨分店轉讓</span><br />
                }
            }
        </div>
        <div class="col-4 text-right">
            <h2>@(_model.RevisionList.Where(r => r.Reason == "轉換體能顧問").Count())</h2>
            @if (currentItem != null)
            {
                <small class="info">@((Naming.ContractServiceStatus)currentItem.Status)</small>
            }
            else if (applicable && _model.FitnessConsultant != _profile.UID && _profile.IsCoach())
            {
                <p>
                    <button class="btn btn-icon btn-icon-mini btn-round waves-effect float-right" onclick="assignConsultant();"><i class="zmdi zmdi-plus"></i></button>
                </p>
            }
        </div>
    </div>
</div>
<script>
    function assignConsultant() {
        $('').launchDownload('@Html.Raw(Url.Action("ReassignFitnessConsultant", "ConsoleHome"))',
            @Html.Raw(JsonConvert.SerializeObject(new
            {
                KeyID = _model.ContractID.EncryptKey()
            })));
    }//
</script>


