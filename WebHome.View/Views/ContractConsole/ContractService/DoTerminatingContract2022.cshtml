
@using System.IO
@using System.Linq.Expressions

@using WebHome.Helper
@using WebHome.Helper.DataOperation
@using WebHome.Models.Locale
@using WebHome.Models.ViewModel
@using WebHome.Models.DataEntity
@using WebHome.Controllers
@using Microsoft.AspNetCore.Mvc.ModelBinding
@using Newtonsoft.Json
@{

    ModelStateDictionary _modelState;
    ModelSource<UserProfile> models;
    CourseContract _model;
    UserProfile _profile;
    String _viewID;



    _modelState = ViewContext.ModelState;
    models = (ModelSource<UserProfile>)ViewContext.HttpContext.Items["Models"];;
    _model = (CourseContract)this.Model;
    _profile = await Context.GetUserAsync();
    _viewID = ViewBag.ViewID as String;

}
<div class="header">
    @{
        var priceItem = _model.CourseContractOrder.OrderBy(o => o.SeqNo)
                .FirstOrDefault()?.LessonPriceType ?? _model.LessonPriceType;
    }
    <h2><strong>原課程單價 <span class="badge bg-blue">@(priceItem.PriceTypeBundle())</span>：</strong> <span class="col-red">@($"{priceItem.ListPrice:##,###,###,###}")</span></h2>
</div>
<div class="body">
    <div class="row clearfix">
        <div class="col-12">
            @*<input type="hidden" name="FitnessConsultant" value="@(_model.FitnessConsultant)" />*@
            <label class="fancy-checkbox custom-bgcolor-pink">
                <input type="checkbox" name="BySelf" value="@((int)Naming.Actor.BySelf)" />
                <span>本人 辦理終止</span>
            </label>
            <label class="fancy-checkbox custom-bgcolor-pink">
                <input type="checkbox" name="BySelf" value="@((int)Naming.Actor.ByOther)" />
                <span>代理人 辦理終止</span>
            </label>
            <script>
                $(function () {
                    function check(element) {
                        $('input:checkbox[name="BySelf"]').prop('checked', false);
                        $(element).prop('checked', true);
                        checkAttachment();
                    }
                    $('input:checkbox[name="BySelf"]').on('click', function (event) {
                        check(this);
                    });
                });

                function checkAttachment() {
                    $('.attachment').css('display', 'none');
                    $('.byOther').css('display', 'none');
                    $('.byPaper').css('display', 'none');
                    if ($('input:checkbox[name="BySelf"]:checked').val() == '@((int)Naming.Actor.ByOther)') {
                        $('.byOther').css('display', 'block');
                        $('.attachment').css('display', 'block');
                    } 
                    if ($('select[name="CauseForEnding"]').val() == '@((int)Naming.CauseForEnding.不宜運動)') {
                        if ($('.byOther').css('display') != 'block') {
                            $('.byPaper').css('display', 'block');
                        }
                        $('.attachment').css('display', 'block');
                    }
                }
            </script>
        </div>
        <div class="col-12">
            <select class="form-control show-tick" name="CauseForEnding" onchange="buildRefundInfo(@(_model.TotalPaidAmount()));">
                <option value="">-- 請選擇終止原因 --</option>
                <option value="@((int)Naming.CauseForEnding.合約到期轉新約)">合約到期轉新約</option>
                <option value="@((int)Naming.CauseForEnding.轉讓第三人)">轉讓予第三人</option>
                <option value="@((int)Naming.CauseForEnding.私人原因)">
                    私人原因（工作、搬家、懷孕、受傷）
                </option>
                <option value="@((int)Naming.CauseForEnding.更改合約類型)">
                    更改合約內容（不退費：更改類型/購買堂數等）
                </option>
                <option value="@((int)Naming.CauseForEnding.學生簽約後反悔)">學生簽約後反悔</option>
                <option value="@((int)Naming.CauseForEnding.所屬教練離職)">所屬教練離職</option>
                <option value="@((int)Naming.CauseForEnding.新冠肺炎疫情)">新冠肺炎疫情</option>
                <option value="@((int)Naming.CauseForEnding.不宜運動)">傷害、疾病或身體不適致不宜運動（須檢附醫生證明）</option>
                <option value="@((int)Naming.CauseForEnding.其他)">其他（自行輸入）</option>
            </select>
        </div>

        <div class="col-12 m-t-30 attachment" style="display:none;">
            @*@{
                ViewBag.DropifyExtension = "pdf";
            }
            <script>
                $(function () {
                    $global.dropifyMessage = {
                        'default': '點選或拖拉代辦委任書（PDF）到這邊',
                        'replace': '點選或拖拉代辦委任書（PDF）取代目前內容',
                        'remove': '刪除內容',
                        'error': 'Ooops, 肯定做錯了什麼'
                    };
                    $global.dropifyError = {
                        'fileSize': 'Ooops, 上傳的檔案太大了啦！ ({{ value }} max).',
                        'imageFormat': 'Ooops, 上傳檔案是PDF嗎？！ ({{ value }} only).'
                    };
                });
            </script>*@
            <h6 class="byOther" style="display:none;"><i class="zmdi zmdi-cloud-upload"></i> 上傳超越體能顧問有限公司代辦委託書/相關證明/檢附醫生證明(一份PDF)</h6>
            <h6 class="byPaper" style="display:none;"><i class="zmdi zmdi-cloud-upload"></i> 檢附醫生證明(一份PDF)</h6>            
            <div>
                @{
                    ViewBag.DropifyExtension = "pdf";
                    await Html.RenderPartialAsync("~/Views/ConsoleHome/Shared/DropifyFileUpload.cshtml", model: "attachment");
                }
            </div>
        </div>
        @*<div class="col-12 m-t-30 byPaper" style="display:none;">
            <h6><i class="zmdi zmdi-cloud-upload"></i> 檢附醫生證明(一份PDF)</h6>
            <div>
                @{
                    ViewBag.DropifyExtension = "pdf";
                    await Html.RenderPartialAsync("~/Views/ConsoleHome/Shared/DropifyFileUpload.cshtml", model: "diagnosis");
                }
            </div>
        </div>*@
        <div class="col-12">
            <div class="form-group">
                <textarea rows="3" class="form-control no-resize" name="Remark" placeholder="請輸入任何想補充的事項..."></textarea>
            </div>
        </div>
    </div>
</div>

<script>

    $(function () {

        $('#@(_viewID) button.quit').on('click', function (event) {
            cancelTerminating();
        });

        $('#@(_viewID) button.finish').on('click', function (event) {
            commitTerminating();
        });

    });

    function cancelTerminating() {
        $('').launchDownload('@Html.Raw(Url.Action("ApplyContractService","ConsoleHome"))',
            @Html.Raw(JsonConvert.SerializeObject(new CourseContractQueryViewModel
                {
                    KeyID = _model.ContractID.EncryptKey(),
                })));
    }

    function commitTerminating() {
        var viewModel = $('#@(_viewID)').find('input,select,textArea').serializeObject();
        viewModel.Reason = '終止';
        viewModel.FitnessConsultant = @(_profile.UID);
        clearErrors();
        showLoading();
        $('form').ajaxForm({
            url: '@Html.Raw(Url.Action("CommitContractService", "ContractConsole",new { KeyID = _model.ContractID.EncryptKey() }))',
            data: viewModel,
            beforeSubmit: function () {
                showLoading();
            },
            success: function (data) {
                hideLoading();
                if ($.isPlainObject(data)) {
                    Swal.fire(
                        'Oops...',
                        data.message,
                        'warning'
                    )
                }
                else {
                    $(data).appendTo($('body'));
                }
            },
            error: function () {
                hideLoading();
            }
        }).submit();

    }

function buildRefundInfo(totalPaid) {
    $formData = $.extend({}, $global.viewModel);
    $formData.CauseForEnding = $('select[name="CauseForEnding"]').val();
        clearErrors();
        showLoading();
        $.post('@Html.Raw(Url.Action("BuildRefundInfo", "ContractConsole"))', $formData, function(data) {
            hideLoading();
            if ($.isPlainObject(data)) {
                Swal.fire(
                    'Oops...',
                    data.message,
                    'warning'
                );
            } else {
                $('#refundInfo').empty()
                    .append(data);
            }
        });

        checkAttachment();

        if($formData.CauseForEnding == '@((int)Naming.CauseForEnding.合約到期轉新約)'
            || $formData.CauseForEnding == '@((int)Naming.CauseForEnding.轉讓第三人)'
            || $formData.CauseForEnding == '@((int)Naming.CauseForEnding.更改合約類型)' 
            || totalPaid <= 0) {
            $('.byCause').css('display','none');
        } else {
            $('.byCause').css('display','block');
        }


}
</script>

