
@using System.IO
@using System.Linq.Expressions

@using WebHome.Helper
@using WebHome.Models.Locale
@using WebHome.Models.ViewModel
@using WebHome.Models.DataEntity
@using WebHome.Controllers
@using Microsoft.AspNetCore.Mvc.ModelBinding
@using Newtonsoft.Json
@{
    ModelStateDictionary _modelState;
    ModelSource<UserProfile> models;
    MonthlyIndicator _model;
    _modelState = ViewContext.ModelState;
    models = (ModelSource<UserProfile>)ViewContext.HttpContext.Items["Models"];;
    _model = (MonthlyIndicator)this.Model;
}
@{
    String _viewID = $"csl{DateTime.Now.Ticks}";
    MonthlyIndicatorQueryViewModel _viewModel = (MonthlyIndicatorQueryViewModel)ViewBag.ViewModel;
}
@{
    dynamic indicator;
    int? averagePrice = 0;

    if (_viewModel.BranchID.HasValue)
    {
        var goal = (MonthlyBranchRevenueGoal)TempData["RevenueGoal"];
        if (goal.ActualCompleteLessonCount.HasValue && goal.ActualLessonAchievement.HasValue && goal.ActualCompleteLessonCount > 0)
        {
            averagePrice = goal.ActualLessonAchievement / goal.ActualCompleteLessonCount;
        }
        indicator = goal;
    }
    else
    {
        var goal = (MonthlyRevenueGoal)TempData["RevenueGoal"];
        var items = models.GetTable<MonthlyBranchRevenueGoal>()
                        .Where(g => g.PeriodID == goal.PeriodID)
                        .Where(g => g.GradeID == goal.GradeID)
                        .Where(g => g.ActualLessonAchievement.HasValue)
                        .Where(g => g.ActualCompleteLessonCount.HasValue).ToList();
        var actualTotalAchievement = items.Sum(g => g.ActualLessonAchievement);
        var actualTotalCount = items.Sum(g => g.ActualCompleteLessonCount);
        if (actualTotalCount.HasValue && actualTotalCount > 0)
        {
            averagePrice = actualTotalAchievement / actualTotalCount;
        }
        indicator = goal;
    }
}
<i class="zmdi zmdi-money zmdi-hc-4x"></i>
@if (averagePrice > 0)
{
    <h4>@($"{averagePrice:##,###,###}")</h4>
}
else
{
<h4>- / -</h4>
}
<span>上課平均單價</span>
