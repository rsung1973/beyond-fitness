

@using System.IO
@using System.Linq.Expressions

@using WebHome.Helper
@using WebHome.Models.Locale
@using WebHome.Models.ViewModel
@using WebHome.Models.DataEntity
@using WebHome.Controllers
@using Microsoft.AspNetCore.Mvc.ModelBinding

@using Newtonsoft.Json
@{
    ModelSource<UserProfile> models;
    ModelStateDictionary _modelState;
    CourseContract _item;
    UserProfile _model;
    CourseContractQueryViewModel _viewModel;

    Layout = "~/Views/ConsoleHome/Template/MainPage.cshtml";


    models = (ModelSource<UserProfile>)ViewContext.HttpContext.Items["Models"];;
    _modelState = ViewContext.ModelState;
    _model = (UserProfile)this.Model;
    _viewModel = (CourseContractQueryViewModel)ViewBag.ViewModel;
    _item = (CourseContract)ViewBag.DataItem;

}
@section CustomHeader {
    <style type="text/css">
        ol {
            padding: 0 0 0 5px;
            margin: 0;
            list-style-type: decimal;
            list-style-position: outside;
            counter-reset: nested; 
            list-style-type: none;
        }

        ol li li {
            padding: 0 0 0 5px;
        }
     
        ol li::before {
            counter-increment: nested;
            content: counters(nested, ".") " ";
        }            
    </style>
}
<!-- Main Content -->
<section class="content">
    @{ ViewBag.BlockHeader = _item.Status == (int)Naming.CourseContractStatus.待簽名 ? "學生簽名" : "主管審核";
        ViewBag.InsertPartial = "~/Views/ConsoleHome/Shared/MyContractHeader.cshtml";
        await Html.RenderPartialAsync("~/Views/ConsoleHome/Module/BlockHeader.cshtml", _model);}

    <div class="container-fluid">
        <div class="card white">
            <div class="body">
                @{ await Html.RenderPartialAsync($"~/Views/ContractConsole/Module/CourseContractView{_item.CourseContractExtension.Version}.cshtml", _item);}

                <div class="row clearfix">
                    <div class="col-lg-12">
                        @if (_item.Status == (int)Naming.CourseContractStatus.待簽名)
                        {
                            if (!_item.InstallmentID.HasValue || !_item.PartialEffective(models).Any())
                            {
                                <button type="button" class="btn btn-danger btn-round btn-simple btn-round waves-effect waves-red reedit" onclick="processContract(@(JsonConvert.SerializeObject(new { KeyID = _item.ContractID.EncryptKey(), Status = (int)Naming.CourseContractStatus.草稿, FromStatus = (int)Naming.CourseContractStatus.待簽名, Drawback = true, })));">內容錯誤，重新編輯</button>
                            }
                                <button type="button" class="btn btn-primary btn-round waves-effect float-right next" onclick="confirmSignature();">確定同意購買此合約</button>
                        }
                        else
                        {
                            if (!_item.InstallmentID.HasValue || !_item.PartialEffective(models).Any())
                            {
                                <button type="button" class="btn btn-danger btn-round btn-simple btn-round waves-effect waves-red reject" onclick="processContract(@(JsonConvert.SerializeObject(new {KeyID = _item.ContractID.EncryptKey(), Status = (int)Naming.CourseContractStatus.草稿,FromStatus = (int)Naming.CourseContractStatus.待審核,  Drawback=true, })));">退回編輯者</button>
                            }
                            <button type="button" class="btn btn-primary btn-round waves-effect float-right next" onclick="processContract(@(JsonConvert.SerializeObject(new {KeyID = _item.ContractID.EncryptKey(), Status = (int)Naming.CourseContractStatus.待簽名,FromStatus = (int)Naming.CourseContractStatus.待審核 })));">確定，審核通過</button>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
<script>
        var done = false;
        function signaturePanel(contractID, uid, signatureName) {
            if (done)
                return;
            var event = event || window.event;
            var $signatureImage = $(event.target);
            $global.commitSignature = function (sigData) {
                $signatureImage[0].src = sigData;
            };
            //showLoading();
            $.post('@Html.Raw(Url.Action("SignaturePanel","ContractConsole"))', { 'contractID': contractID, 'uid': uid, 'signatureName': signatureName }, function (data) {
                //hideLoading();
                $(data).appendTo($('body'));
            });
        }

        function confirmSignature() {
            if ($global.hasViewedDetails != true) {
                Swal.fire(
                    'Oops...',
                    '請將卷軸拉至最底，以確認您已詳閱BEYOND FITNESS產品及服務特約條款內容',
                    'warning'
                );

                return ;
            }
            showLoading();
            $.post('@Html.Raw(Url.Action("ConfirmSignature","ContractConsole",new { KeyID = _item.ContractID.EncryptKey() }))',
                {
                    'Extension': $('input[name="extension"]').is(':checked'),
                    'Booking': $('input[name="booking"]').is(':checked'),
                    'Cancel': $('input[name="cancel"]').is(':checked'),
                    'Agree': $('input[name="Agree"]').is(':checked'),
                    'GDPRAgree': $('input[name="GDPRAgree"]').is(':checked'),
                }, function (data) {
                    hideLoading();
                    if ($.isPlainObject(data)) {
                        Swal.fire(
                            'Oops...',
                            data.message,
                            'warning'
                        );
                    }
                    else {
                        $(data).appendTo($('body'));
                    }
                });
        }

        function enableContract() {
            showLoading();
            $.post('@Html.Raw(Url.Action("EnableContractStatus","ContractConsole",new { KeyID = _item.ContractID.EncryptKey(), Status = (int)Naming.CourseContractStatus.待簽名 }))', {}, function (data) {
                hideLoading();
                hideLoading();
                if ($.isPlainObject(data)) {
                    Swal.fire(
                        'Oops...',
                        data.message,
                        'warning'
                    )
                }
                else {
                    $(data).appendTo($('body'));
                }
            });
        }

        function processContract(itemData) {
            showLoading();
            $.post('@Html.Raw(Url.Action("ExecuteContractStatus","ContractConsole"))', itemData, function (data) {
                hideLoading();
                if ($.isPlainObject(data)) {
                    Swal.fire(
                        'Oops...',
                        data.message,
                        'warning'
                    )
                }
                else {
                    $(data).appendTo($('body'));
                }
            });
        }
</script>

@section TailPageJavaScriptInclude {
    <!-- jSignature -->
    <link rel="stylesheet" href="css/jsignature.css">
    <!--Sparkline Plugin Js-->
    <script src="plugins/jquery-sparkline/jquery.sparkline.js"></script>
    <!-- SweetAlert Plugin Js -->
    <script src="plugins/sweetalert/sweetalert.min.js"></script>
    <!-- Jquery DataTable Plugin Js -->
    <script src="bundles/datatablescripts.bundle.js"></script>
    <script src="plugins/jquery-datatable/Responsive-2.2.2/js/dataTables.responsive.min.js"></script>
    <script src="plugins/jquery-datatable/FixedColumns-3.2.5/js/dataTables.fixedColumns.min.js"></script>

    @{ await Html.RenderPartialAsync("~/Views/ConsoleHome/Shared/KnobJS.cshtml");}


    @{ String basePath = VirtualPathUtility.ToAbsolute("~/");}

    <script src="@(basePath + "js/plugin/jSignature/jSignature.js")"></script>
    <script src="@(basePath + "js/plugin/jSignature/plugins/jSignature.CompressorBase30.js")"></script>
    <script src="@(basePath + "js/plugin/jSignature/plugins/jSignature.CompressorSVG.js")"></script>
    <script src="@(basePath + "js/plugin/jSignature/plugins/jSignature.UndoButton.js")"></script>
    <script src="@(basePath + "js/plugin/jSignature/plugins/signhere/jSignature.SignHere.js")"></script>

    <script type="text/javascript"></script>
}

