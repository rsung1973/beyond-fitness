@using System.IO
@using System.Linq.Expressions

@using WebHome.Helper
@using WebHome.Models.Locale
@using WebHome.Models.ViewModel
@using WebHome.Models.DataEntity
@using WebHome.Controllers
@using Microsoft.AspNetCore.Mvc.ModelBinding
@using WebHome.Components

@using Newtonsoft.Json
@{
    ModelSource<UserProfile> models;
    ModelStateDictionary _modelState;
    UserProfile _model;
    DailyBookingQueryViewModel _viewModel;

    Layout = "~/Views/ConsoleHome/Template/MainPage.cshtml";

    models = (ModelSource<UserProfile>)ViewContext.HttpContext.Items["Models"];;
    _modelState = ViewContext.ModelState;
    _model = (UserProfile)this.Model;
    _viewModel = (DailyBookingQueryViewModel)ViewBag.ViewModel;
    UserProfile _learner = (UserProfile)ViewBag.DataItem;
}
@section CustomHeader {
    <!-- Fullcalendar -->
    <link href="plugins/fullcalendar/fullcalendar.min.css" rel="stylesheet">
    <!-- Bootstrap Datetimepick -->
    @*<link href="plugins/bootstrap-datetimepicker/css/bootstrap-datetimepicker.min.css" rel="stylesheet" />*@
    @*<link href="css/datetimepicker.css" rel="stylesheet" />*@


    <link href="css/smartcalendar-2.css" rel="stylesheet" />
    <!-- Inbox -->
    <link href="css/inbox.css" rel="stylesheet">
    <!-- Multi Select Css -->
    <link href="plugins/multi-select/css/multi-select.css" rel="stylesheet">
    <!--Bootstrap progressbar -->
    <link rel="stylesheet" href="plugins/bootstrap-progressbar/css/bootstrap-progressbar-3.3.4.min.css">
    <!-- JQuery DataTable Css -->
    <link href="plugins/jquery-datatable/DataTables-1.10.18/css/dataTables.bootstrap4.min.css" rel="stylesheet">
    <link href="plugins/jquery-datatable/Responsive-2.2.2/css/responsive.bootstrap4.min.css" rel="stylesheet">
    <link href="plugins/jquery-datatable/FixedColumns-3.2.5/css/fixedColumns.bootstrap4.min.css" rel="stylesheet">

}

<section class="content profile-page">
    @{
        ViewBag.BlockHeader = "X檔案";
        await Html.RenderPartialAsync("~/Views/ConsoleHome/Module/BlockHeader.cshtml", _model);
    }
    @{ 
        await Html.RenderPartialAsync("~/Views/ConsoleHome/LearnerProfile/ExerciseDuration.cshtml", _model);
    }
    <!--行事曆-->
    <div class="container-fluid page-calendar">
        <div class="card">
            <div class="row">
                <div class="col-md-12 col-lg-4 col-xl-4">
                    <div class="body">
                        <div class="row clearfix">
                            <div class="col-md-11 col-lg-12 col-9">
                            </div>
                            <div class="col-md-11 col-lg-12 col-3">
                                <button class="btn btn-default hidden-lg-up m-t-0 float-right" data-toggle="collapse" data-target="#open-events" aria-expanded="false" aria-controls="collapseExample"><i class="zmdi zmdi-chevron-down"></i></button>
                            </div>
                        </div>
                        <div class="collapse-xs collapse-sm collapse" id="open-events">
                            @{
                                var dataQuery = models.GetTable<CourseContractMember>().Where(m => m.UID == _learner.UID)
                                        .Join(models.PromptEffectiveContract(),
                                            m => m.ContractID, c => c.ContractID, (m, c) => c);
                                var items = dataQuery.ToList();
                                var fullPaid = items.Where(c => c.TotalCost <= c.TotalPaidAmount());
                                var unpaid = items.Where(c => c.TotalCost > c.TotalPaidAmount());
                            }
                            @{
                                await Html.RenderPartialAsync("~/Views/LearnerProfile/Module/LearnerEffectiveContractList.cshtml", fullPaid);
                            }
                            @{
                                await Html.RenderPartialAsync("~/Views/LearnerProfile/Module/LearnerUnpaidContractList.cshtml", unpaid);
                            }
                            <hr>
                            <div class="event-name b-custom row">
                                @{ await Html.RenderPartialAsync("~/Views/LearnerProfile/Module/LearnerCharacter.cshtml", _learner); }
                            </div>
                            <button class="btn btn-darkteal waves-effect float-right" onclick="javascript:editLearnerCharacter();">重新了解學生 GO</button>
                        </div>
                    </div>
                </div>
                <div class="col-md-12 col-lg-8 col-xl-8">
                    <div class="body">
                        @{ await Html.RenderPartialAsync("~/Views/LearnerProfile/Module/LearnerLessonsReview.cshtml", _learner); }
                        @(await Component.InvokeAsync<LearnerCalendarViewComponent>(new DailyBookingQueryViewModel { LearnerID = _learner.UID }))
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

@section TailPageJavaScriptInclude {
    <!-- Fullcalendar Plugin js -->
    <script src="bundles/fullcalendarscripts.bundle.js"></script>
    <script src="plugins/fullcalendar/locale/zh-tw.js"></script>
    <!-- Multi Select Plugin Js -->
    <script src="plugins/multi-select/js/jquery.multi-select.js"></script>
    <!-- countTo Plugin Js -->
    <script src="bundles/countTo.bundle.js"></script>
    <!-- Sparkline Plugin Js -->
    <script src="plugins/jquery-sparkline/jquery.sparkline.js"></script>
    <!-- Jquery DataTable Plugin Js -->
    <script src="bundles/datatablescripts.bundle.js"></script>
    <script src="plugins/jquery-datatable/Responsive-2.2.2/js/dataTables.responsive.min.js"></script>
    <script src="plugins/jquery-datatable/FixedColumns-3.2.5/js/dataTables.fixedColumns.min.js"></script>

    <script>
        $(function () {

            $('.counto').countTo();

        });

        function editLearner() {
            $global.viewModel.KeyID = '@Html.Raw(_learner.UID.EncryptKey())';
            $global.viewModel.ProfileOnly = true;
            $global.viewModel.UseVersion = '2022';
            showLoading();
            $.post('@Html.Raw(Url.Action("EditContractMember", "ContractConsole"))', $global.viewModel, function (data) {
                hideLoading();
                if ($.isPlainObject(data)) {
                    alert(data.message);
                } else {
                    $(data).appendTo($('body'));
                }
            });
        }

        function editLearnerCharacter() {

            $('').launchDownload('@(Html.Raw(Url.Action("EditLearnerCharacter","ConsoleHome",new { KeyID = _learner.UID.EncryptKey() })))', {});

            @*$global.rejectCharacterDone = function () {
                $('').launchDownload('@Html.Raw(Url.Action("LearnerProfile","ConsoleHome"))', { 'keyID': '@Html.Raw(_learner.UID.EncryptKey())' });
            };
            $.post('@Html.Raw(Url.Action("ResumeLearnerCharacter", "LearnerProfile"))', { 'keyID': '@Html.Raw(_learner.UID.EncryptKey())' }, function (data) {
                if ($.isPlainObject(data)) {
                    if (data.result) {
                        $('').launchDownload('@(Html.Raw(Url.Action("EditLearnerCharacter","ConsoleHome",new { KeyID = _learner.UID.EncryptKey() })))', {});
                    } else {
                        swal(data.message);
                    }
                } else {
                    $(data).appendTo($('body'));
                }
            });*@
        }

        function showBonusDetails() {
            showLoading();
            $.post('@Html.Raw(Url.Action("ShowLearnerBonusDetails", "LearnerProfile",new { KeyID = _learner.UID.EncryptKey()}))', {}, function (data) {
                hideLoading();
                if ($.isPlainObject(data)) {
                    alert(data.message);
                } else {
                    $(data).appendTo($('body'));
                }
            });
        }
    </script>
}

