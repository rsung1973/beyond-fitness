
@using System.IO
@using System.Linq.Expressions
@using Microsoft.AspNetCore.Mvc.ModelBinding

@using WebHome.Helper
@using WebHome.Models.Locale
@using WebHome.Models.ViewModel
@using WebHome.Models.DataEntity
@using WebHome.Controllers
@using CommonLib.Utility

@{

    ModelStateDictionary _modelState;
    ModelSource<UserProfile> models;
    CalendarEventItem _model;

    _modelState = ViewContext.ModelState;
    models = (ModelSource<UserProfile>)ViewContext.HttpContext.Items["Models"]; ;
    _model = (CalendarEventItem)this.Model;
}
@{
    String clickHander(LessonTime item, bool needApprove)
    {
        if (needApprove)
        {
            return "void(0);";
        }
        else
        {
            return String.Concat("$('').launchDownload('",
                Url.Action("LessonTrainingContent", "ConsoleHome", new { LearnerID = item.RegisterLesson.UID }),
                "', {'keyID': '",
                item.LessonID.EncryptKey(),
                "'});");
        }
    }
}
@{
    LessonTime item = (LessonTime)_model.EventItem;
    bool needApprove = item.PreferredLessonTime != null && !item.PreferredLessonTime.ApproverID.HasValue;
    <div class="@(needApprove ? "event-name b-approve row" : "event-name b-PT row")" onclick="@Html.Raw(clickHander(item,needApprove))">
        <div class="col-2 text-left">
            <h4><span>@(item.ClassTime.Value.ToString("HH:mm"))</span><span>@(item.ClassTime.Value.AddMinutes(item.DurationInMinutes.Value).ToString("HH:mm"))</span></h4>
        </div>
        <div class="col-10">
            <h6>
                P.T @(String.Join("、", item.GroupingLesson.RegisterLesson.Select(r => r.UserProfile.RealName)))
                <address><i class="zmdi zmdi-pin"></i>@(item.BranchStore.BranchName)</address>
                @{ await Html.RenderPartialAsync("~/Views/ConsoleHome/Module/RenderLessonCheck.cshtml", item);}
            </h6>
            @{
                var trainingPlan = item.TrainingPlan.FirstOrDefault();
                if (trainingPlan?.TrainingExecution.Emphasis != null)
                {
                    <p>@(trainingPlan?.TrainingExecution.Emphasis)</p>
                }
                else
                {
                    <p class="col-blush">Unfinished</p>
                }
            }
        </div>
    </div>
}
