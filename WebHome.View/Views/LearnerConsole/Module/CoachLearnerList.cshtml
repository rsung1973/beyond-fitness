@using System.IO
@using System.Linq.Expressions

@using WebHome.Helper
@using WebHome.Models.Locale
@using WebHome.Models.ViewModel
@using WebHome.Models.DataEntity
@using WebHome.Controllers
@using Microsoft.AspNetCore.Mvc.ModelBinding
@using Newtonsoft.Json
@using CommonLib.Utility

@functions
{
    ModelStateDictionary _modelState;
    ModelSource<UserProfile> models;
    IQueryable<UserProfile> _model;
    CoachQueryViewModel _viewModel;
    DateTime idx = DateTime.Today.FirstDayOfMonth();
    DateTime monthIdx = DateTime.Today.FirstDayOfMonth();

}
@{
    _modelState = ViewContext.ModelState;
    models = (ModelSource<UserProfile>)ViewContext.HttpContext.Items["Models"];
    _model = (IQueryable<UserProfile>)this.Model;
    _viewModel = (CoachQueryViewModel)ViewBag.ViewModel;

    var contracts = models.PromptEffectiveContract();
    var contractMember = models.GetTable<CourseContractMember>();
    ServingCoach coach = ViewBag.DataItem as ServingCoach;

    LessonTimeAchievementHelper helper = new LessonTimeAchievementHelper(models)
            {
                LessonItems = models.GetTable<V_Tuition>()
                                                .Where(l => l.ClassTime >= DateTime.Today.AddMonths(-6))
                                                .Where(l => l.ClassTime < DateTime.Today.AddDays(1)),
            };
}

<table class="table table-striped table-custom nowrap dataTable-learner" style="width:100%">
    <thead class="bg-darkteal">
        <tr>
            <th>
                <label class="fancy-checkbox">
                    <input class="select-all" type="checkbox" name="checkbox" onclick="checkAll(this);" />
                    <span></span>
                </label>
            </th>
            <th class="align-center">編號</th>
            <th class="align-center">學生</th>
            <th class="align-center">狀態</th>
            <th class="align-center">性別</th>
            <th class="align-center">年齡</th>
            <th class="align-center">所屬教練</th>
            <th class="align-center">主教練</th>
            <th class="align-center">主教練上課率</th>
            <th class="align-center">建檔日</th>
            <th class="align-center">生效中合約</th>
        </tr>
    </thead>
    <tbody>
        @{
            foreach (var item in _model)
            {
                <tr onclick="processCoachLearner('@Html.Raw((new CoachLearnerQueryViewModel { CoachID = coach.CoachID,UID = item.UID }).Serialize())');">
                    <td style="width: 50px;">
                        <label class="fancy-checkbox">
                            <input style="z-index:1000;" class="checkbox-tick" type="checkbox" name="LearnerID" value="@(item.UID)" onclick="event.stopPropagation();" />
                            <span onclick="event.stopPropagation();"></span>
                        </label>
                    </td>
                    <td>@(item.MemberCode)</td>
                    <td>@(item.FullName())</td>
                    <td>
                        @if (item.LevelID == (int)Naming.MemberStatusDefinition.Anonymous)
                        {
                            <text>幽靈</text>
                        }
                        else
                        {
                            <text>正式</text>
                        }
                    </td>
                    <td>@(item.UserProfileExtension.Gender == "F" ? "女" : "男")</td>
                    <td>@(item.YearsOld())</td>
                    <td>
                        @foreach (var advisor in item.LearnerFitnessAdvisor)
                        {
                            <text>@(advisor.ServingCoach.UserProfile.FullName())</text>
                            <br />
                        }
                    </td>
                    <td>
                        @foreach (var p in item.LearnerCoachProperty.Where(p => p.PropertyID == (int)LearnerCoachProperty.PropertyType.PrimaryCoach))
                        {
                            <text>@(p.ServingCoach.UserProfile.FullName())</text>
                            <br />
                        }
                    </td>
                    <td>
                        @{
                            var grouping = models.GetTable<GroupingLesson>()
                                                .Join(models.GetTable<RegisterLesson>().Where(r => r.UID == item.UID),
                                                    t => t.GroupID, r => r.RegisterGroupID, (t, r) => t);
                            var lessons = helper.SessionForPrimaryCoach
                                    .Where(t => grouping.Any(g => g.GroupID == t.GroupID));
                            if (lessons.Any())
                            {
                                int totalCount = lessons.Count();
                                foreach (var p in item.LearnerCoachProperty.Where(p => p.PropertyID == (int)LearnerCoachProperty.PropertyType.PrimaryCoach))
                                {
                                    <text>@($"{lessons.Where(t => t.AttendingCoach == p.CoachID).Count() * 100M / totalCount:.##}%")</text>
                                    <br />
                                }
                            }
                        }
                    </td>
                    <td>@(item.CreateTime?.ToString("yyyy/MM/dd") ?? "") </td>
                    <td>@(contracts.Where(c => contractMember.Any(m => m.UID == item.UID && m.ContractID == c.ContractID)).Count())</td>
                </tr>
            }
        }
    </tbody>
</table>

<script>

    $(function () {

        if ($global.dtLearner != undefined) {
            $global.dtLearner.destroy();
        }

        $global.dtLearner = $('.dataTable-learner').DataTable({
            "order": [
                [2, 'asc']
            ],
            "pageLength": 30,
            "lengthMenu": [
                [30, 50, 100, -1],
                [30, 50, 100, "全部"]
            ],
            "language": {
                "lengthMenu": "每頁顯示 _MENU_ 筆資料",
                "zeroRecords": "沒有資料也是種福氣",
                "info": "共 _TOTAL_ 筆，目前顯示第 _START_ 至 _END_筆資料",
                "infoEmpty": "顯示 0 筆的資料",
                "infoFiltered": "(總共從 _MAX_ 筆資料過濾)",
                "loadingRecords": "快馬加鞭處理中...",
                "processing": "快馬加鞭處理中...",
                "search": "快速搜尋：",
                "paginate": {
                    "first": "第一頁",
                    "last": "最後一頁",
                    "next": "下一頁",
                    "previous": "前一頁"
                },
            },
            scrollX: true,
            scrollCollapse: true,
            fixedColumns: {
                leftColumns: 3
            },
            "columnDefs": [{
                targets: [1, 3, 4, 5, 7, 8, 9],
                className: "align-center more"
            },
            {
                targets: [0],
                className: "align-center"
            }
            ],
        });

        $('.dataTable-learner').resize();

    });

</script>