
@using System.IO
@using System.Linq.Expressions

@using WebHome.Helper
@using WebHome.Helper.DataOperation
@using WebHome.Models.Locale
@using WebHome.Models.ViewModel
@using WebHome.Models.DataEntity
@using WebHome.Controllers
@using Microsoft.AspNetCore.Mvc.ModelBinding
@using Newtonsoft.Json
@{

    ModelStateDictionary _modelState;
    ModelSource<UserProfile> models;
    UserProfile _profile;

    _modelState = ViewContext.ModelState;
    models = (ModelSource<UserProfile>)ViewContext.HttpContext.Items["Models"];
    _profile = await Context.GetUserAsync();

    PaymentQueryViewModel _viewModel = ViewBag.ViewModel as PaymentQueryViewModel;
}
@{
    if (_profile.IsCoach())
    {
        _viewModel.BranchID = models.GetTable<CoachWorkplace>().Where(c => c.CoachID == _profile.UID)
                                .FirstOrDefault()?.BranchID;
    }
    IQueryable<CourseContract> items = models.GetUnpaidTerminationCharge();
}
<div class="card square inbox">
    <div class="cover">
        <h6 class="m-t-20 m-l-20">終止手續費 尚未收款清單如下：</h6>
        <ul class="mail_list list-group list-unstyled">
            @foreach (var item in items)
            {
                await BuildItem(item);
            }
        </ul>
    </div>
</div>

@{
    async Task BuildItem(CourseContract item)
    {
    <li class="list-group-item">
                            <div class="media">
                                <div class="pull-left">
                                    <div class="controls">
                                        <label class="fancy-checkbox">
                                            <input type="checkbox" id="basic_checkbox_@(item.ContractID)" name="ContractID" value="@(item.ContractID)" onclick="selectContract(this);" />
                                            <span></span>
                                        </label>
                                        <a href="javascript:void(0);" class="favourite text-muted hidden-sm-down" data-toggle="active"><i class="zmdi zmdi-run"></i></a>
                                    </div>
                                    <div class="thumb hidden-sm-down m-r-20">
                                        @{
                            ViewBag.ProfileClass = "rounded-circle popfit";
                            await Html.RenderPartialAsync("~/Views/Common/ProfileImage.cshtml", item.ContractOwner);
                                        }
                                    </div>
                                </div>
                                <div class="media-body">
                                    <div class="media-heading">
                                        <a class="m-r-10">@($"{item.ContractDate:yyyy/MM/dd}") - @(item.ContractOwner.FullName())</a>
                                        <div class="msg">
                                            @(item.CourseContractType.TypeName) @(item.ContractNo())（@(CourseContractRevision.CauseForEndingMeaning((Naming.CauseForEnding?)item.CourseContractRevision.CauseForEnding))）
                                            <span class="float-right">
                                                <small><time>@(item.ServingCoach.UserProfile.FullName())</time></small>
                                                <span class="badge bg-tiffany"><i class="zmdi zmdi-pin"></i> @(item.CourseContractExtension.BranchStore.BranchName)</span>
                                            </span>
                                        </div>
                                    </div>
                                </div>
                            </div>
    </li>
    }
}

@if(_viewModel.ContractID.HasValue)
{
    <script>
        $(function() {
            var $item = $('input[name="ContractID"][value="@(_viewModel.ContractID)"]');
            $item.prop('checked', true);
        });
    </script>
}

<script>
    function selectContract(element) {
        var current = $(element).is(':checked');
        $('input:checkbox').prop('checked', false);
        $(element).prop('checked', current);
        if (current) {
            showLoading();
            $.post('@Html.Raw(Url.Action("EditPaymentForTerminationCharge", "PaymentConsole"))', { 'ContractID': $(element).val() }, function (data) {
                hideLoading();
                if ($.isPlainObject(data)) {
                    if (data.result) {
                    } else {
                        Swal.fire(
                            'Oops...',
                            data.message,
                            'warning'
                        );
                    }
                } else {
                    $('#forCounter').empty()
                        .append(data);
                }
            });
        }
    }

    function commitPayoff() {

        Swal.fire({
            title: "新增" + $global.paymentItem + "收款",
            text: "請再次確認收款資料正確?",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: "#DD6B55",
            confirmButtonText: '確定',
            cancelButtonText: '取消',
            focusCancel: true
        }).then((result) => {
            if (result.isConfirmed) {
                clearErrors();
                delete $global.viewModel.RegisterID;
                var $formData = $('input,select,textarea').serializeObject();
                $formData = $.extend({}, $global.viewModel, $formData);
                showLoading();
                $.post('@Html.Raw(Url.Action("CommitPaymentForTerminationCharge","PaymentConsole",new { _viewModel.PaymentID }))', $formData, function (data) {
                    hideLoading();
                    if ($.isPlainObject(data)) {
                        if (data.result) {
                            showLoading();
                            $('').launchDownload('@Html.Raw(Url.Action("InquirePaymentIndex","ConsoleHome"))', { 'PaymentID': data.PaymentID });
                        } else {
                            Swal.fire(
                                'Oops...',
                                data.message,
                                'warning'
                            );
                        }
                    } else {
                        $(data).appendTo($('body')).remove();
                    }
                });
            } else {

            }
        });
    }

    function quitPayoff() {
        window.location.href = '@Url.Action("PaymentIndex","ConsoleHome")';
    }

</script>