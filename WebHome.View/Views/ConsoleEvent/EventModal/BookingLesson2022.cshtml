@using System.IO
@using System.Linq.Expressions

@using WebHome.Helper
@using WebHome.Models.Locale
@using WebHome.Models.ViewModel
@using WebHome.Models.DataEntity
@using WebHome.Controllers
@using Microsoft.AspNetCore.Mvc.ModelBinding
@{

    ModelStateDictionary _modelState;
    ModelSource<UserProfile> models;
    UserProfile _model;
    CalendarEventViewModel _viewModel;
    String _dialogID = $"booking{DateTime.Now.Ticks}";
    UserProfile _profile;

    BookingLessonPageModel _pageModel = new BookingLessonPageModel { };
    ViewBag.PageModel = _pageModel;

    _modelState = ViewContext.ModelState;
    models = (ModelSource<UserProfile>)ViewContext.HttpContext.Items["Models"]; ;
    _model = (UserProfile)this.Model;
    _viewModel = (CalendarEventViewModel)ViewBag.ViewModel;
    _profile = await Context.GetUserAsync();

}
<div class="modal fade" id="@(_dialogID)" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="member-card">
                <a class="closebutton" data-dismiss="modal"></a>
                <div class="header l-blush">
                    <h4 class="m-t-0 p-t-10">
                        @(_model.FullName())
                        <small class="badge bg-amber">
                            @{
                                if (_model.IsTrialLearner())
                                {
                                            <text>體驗</text>
                                }
                                else if (_model.IsLearner())
                                {
                                            <text>正式</text>
                                }
                            }
                            學生
                        </small>
                    </h4>
                </div>
                <div class="member-img">
                    <a href="javascript:void(0);">
                        @{
                            ViewBag.ProfileClass = "rounded-circle popfit";
                            await Html.RenderPartialAsync("~/Views/Common/ProfileImage.cshtml", _model);
                        }
                    </a>
                </div>
                <div class="sessionbody">
                    <div class="row">
                        <div class="col-md-6 col-sm-6 col-xs-12">
                            <div class="input-group">
                                <input type="text" class="form-control datetime" data-date-format="yyyy/mm/dd hh:ii" readonly="readonly" placeholder="開始時間" name="ClassDate" value="@($"{_viewModel.StartDate:yyyy/MM/dd HH:mm}")" />
                                <span class="input-group-addon">
                                    <i class="zmdi zmdi-time"></i>
                                </span>
                            </div>
                        </div>
                        <div class="col-md-6 col-sm-6 col-xs-12">
                            <select class="form-control show-tick" name="BranchID">
                                <option value="">-- 請選擇地點 --</option>
                                @{
                                    ViewBag.DataItems = models.PromptAvailableStore();
                                    int prefered = models.GetTable<CoachWorkplace>().Where(c => c.CoachID == _profile.UID).Select(c => (int?)c.BranchID).FirstOrDefault() ?? -1;
                                    await Html.RenderPartialAsync("~/Views/SystemInfo/BranchStoreOptions.cshtml", model: prefered);
                                }
                            </select>
                        </div>
                        <div class="col-xs-12">
                            <p class="col-darkteal">遠距教學請在下方輸入Zoom會議室連結</p>
                            <div class="form-line">
                                <textarea rows="1" class="form-control no-resize" placeholder="例：https://zoom.us/j/92400075019?pwd=dWJidHNwbU05QlVmTGh0a2hyOEs0dz09 " maxlength="2048" name="Place"></textarea>
                                <script>
                                    $(function() {
                                        $('#@(_dialogID) textarea[name="Place"]').on('change', function(element) {
                                            var $element = $(this);
                                            var start = $element.val().indexOf('https');
                                            if (start >= 0) {
                                                var end = $element.val().indexOf('\n', start);
                                                if (end > start) {
                                                    $element.val($element.val().substring(start, end));
                                                }
                                            }
                                        });
                                    });
                                </script>
                            </div>
                        </div>
                    </div>
                    <div class="row clearfix">
                        <div class="col-12">
                            <ul class="nav nav-tabs-new2 p-t-0" id="pointTabs" onclick="javascript:clearBooking();">
                                <li class="nav-item"><a class="nav-link" data-toggle="tab" data-id="basicTab" href="#TSTab">Trial Session</a></li>
                                <li class="nav-item"><a class="nav-link active" data-toggle="tab" data-id="basicTab" href="#PTTab">P.T Session</a></li>
                                <li class="nav-item"><a class="nav-link" data-toggle="tab" data-id="loginTab" href="#PITab">P.I Session</a></li>
                                <li class="nav-item"><a class="nav-link" data-toggle="tab" data-id="coachListTab" href="#HSTab">Healthy Session</a></li>
                            </ul>
                        </div>
                    </div>
                    <div class="card white inbox">
                        <div class="cover">
                            <div class="tab-content p-l-5 p-r-5 p-t-10">
                                <div class="tab-pane" id="TSTab">
                                    <ul class="mail_list list-group list-unstyled">
                                        @{
                                            await Html.RenderPartialAsync("~/Views/ConsoleEvent/EventModal/BookingTrialLesson2022.cshtml", _model);
                                        }
                                        @{
                                            await Html.RenderPartialAsync("~/Views/ConsoleEvent/EventModal/BookingRemoteTrialLesson2022.cshtml", _model);
                                        }
                                    </ul>
                                </div>
                                <div class="tab-pane active" id="PTTab">
                                    <ul class="mail_list list-group list-unstyled">
                                        @if (!_model.UserProfileExtension.CurrentTrial.HasValue)
                                        {
                                            await Html.RenderPartialAsync("~/Views/ConsoleEvent/EventModal/BookingPTSession.cshtml", _model);
                                        }
                                    </ul>
                                </div>
                                <div class="tab-pane" id="PITab">
                                    <ul class="mail_list list-group list-unstyled">
                                        @if (!_model.UserProfileExtension.CurrentTrial.HasValue)
                                        {
                                            await Html.RenderPartialAsync("~/Views/ConsoleEvent/EventModal/BookingPISession.cshtml", _model);
                                        }
                                    </ul>
                                </div>
                                <div class="tab-pane" id="HSTab">
                                    <ul class="mail_list list-group list-unstyled">
                                        @if (!_model.UserProfileExtension.CurrentTrial.HasValue)
                                        {
                                            await Html.RenderPartialAsync("~/Views/ConsoleEvent/EventModal/BookingHSSession.cshtml", _model);
                                        }
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            @*@if (_pageModel.HasChoice)
            {*@
            <div class="modal-footer">
                <button type="button" class="btn btn-darkteal btn-round waves-effect" onclick="javascript:if(booking) booking();">確定, 不後悔</button>
            </div>
            @*}*@
        </div>
    </div>

    @{
        await Html.RenderPartialAsync("~/Views/ConsoleHome/Shared/BSModalScript.cshtml", model: _dialogID);
    }

    <script>

        var booking;
        function selectBooking(element, lessonType, priceID) {
            var $element = $(element);
            $('input:checkbox').prop('checked', false);
            $element.prop('checked', true);
            if ($element.is('[data-location]')) {
                var $branch = $('#@(_dialogID) select[name="BranchID"]');
                $branch.find($element.attr('data-location')).prop('selected', true);
                $branch.selectpicker('refresh');
            }
            booking = function() {
                commitBooking(lessonType, priceID);
            }
        }

        function clearBooking() {
            $('#@(_dialogID) input:checkbox').prop('checked', false);
            booking = function() {
                Swal.fire(
                    'Oops...',
                    '請勾選課程！',
                    'warning'
                );
            }
        }

        function commitBooking(lessonType, priceID) {

            var $formData = $('#@(_dialogID) input,select,textarea').serializeObject();
            $formData.coachID = @(_profile.UID);
            $formData.UID = @(_model.UID);
            $formData.sessionStatus = lessonType;
            $formData.priceID = priceID;

            var $item = $('#@(_dialogID) input[name="RegisterID"]:checked');
            $formData.Version = $item.attr('data-version');

            clearErrors();
            switch (lessonType) {

                case '@((int)Naming.LessonPriceStatus.一般課程)':
                case '@((int)Naming.LessonPriceStatus.點數兌換課程)':
                case '@((int)Naming.LessonPriceStatus.企業合作方案)':
                default:
                    $.post('@Html.Raw(Url.Action("CommitBookingByCoach","Lessons"))', $formData, function(data) {
                        if ($.isPlainObject(data)) {
                            if (data.result) {
                                $global.closeAllModal();
                                if (typeof (refreshEvents) == 'function') {
                                    refreshEvents();
                                }
                                if (typeof (refetchCalendarEvents) == 'function') {
                                    refetchCalendarEvents();
                                }
                                Swal.fire(
                                    '幹得好!',
                                    data.message,
                                    'success'
                                );
                            } else {
                                Swal.fire(
                                    'Oops...',
                                    data.message,
                                    'warning'
                                );
                            }
                        } else {
                            $(data).appendTo('body').remove();
                        }
                    });
                    break;

                case '@((int)Naming.LessonPriceStatus.自主訓練)':
                    $formData.trainingBySelf = @((int)LessonTime.SelfTrainingDefinition.自主訓練);
                    $.post('@Html.Raw(Url.Action("CommitBookingByCoach","Lessons"))', $formData, function(data) {
                        if ($.isPlainObject(data)) {
                            if (data.result) {
                                $global.closeAllModal();
                                if (typeof (refreshEvents) == 'function') {
                                    refreshEvents();
                                }
                                if (typeof (refetchCalendarEvents) == 'function') {
                                    refetchCalendarEvents();
                                }
                                Swal.fire(
                                    '幹得好!',
                                    data.message,
                                    'success'
                                );
                            } else {
                                Swal.fire(
                                    'Oops...',
                                    data.message,
                                    'warning'
                                );
                            }
                        } else {
                            $(data).appendTo('body').remove();
                        }
                    });
                    break;
                case '@((int)Naming.LessonPriceStatus.在家訓練)':
                    $formData.trainingBySelf = @((int)LessonTime.SelfTrainingDefinition.在家訓練);
                    $.post('@Html.Raw(Url.Action("CommitBookingByCoach","Lessons"))', $formData, function(data) {
                        if ($.isPlainObject(data)) {
                            if (data.result) {
                                $global.closeAllModal();
                                if (typeof (refreshEvents) == 'function') {
                                    refreshEvents();
                                }
                                if (typeof (refetchCalendarEvents) == 'function') {
                                    refetchCalendarEvents();
                                }
                                Swal.fire(
                                    '幹得好!',
                                    data.message,
                                    'success'
                                );
                            } else {
                                Swal.fire(
                                    'Oops...',
                                    data.message,
                                    'warning'
                                );
                            }
                        } else {
                            $(data).appendTo('body').remove();
                        }
                    });
                    break;

                case '@((int)Naming.LessonPriceStatus.體驗課程)':
                    $formData.trainingBySelf = @((int)LessonTime.SelfTrainingDefinition.體驗課程);
                    $.post('@Html.Raw(Url.Action("CommitTrialLesson","CoachFacet"))', $formData, function(data) {
                        if ($.isPlainObject(data)) {
                            if (data.result) {
                                $global.closeAllModal();
                                if (typeof (refreshEvents) == 'function') {
                                    refreshEvents();
                                }
                                if (typeof (refetchCalendarEvents) == 'function') {
                                    refetchCalendarEvents();
                                }
                                Swal.fire(
                                    '幹得好!',
                                    data.message,
                                    'success'
                                );
                            } else {
                                Swal.fire(
                                    'Oops...',
                                    data.message,
                                    'warning'
                                );
                            }
                        } else {
                            $(data).appendTo('body').remove();
                        }
                    });
                    break;
            }
        }

        $(function() {
            equipDatetimePicker();

            $('#@(_dialogID) input:checkbox').on('click', function(event) {
                var event = event || window.event;
                var $target = $(event.target);
                if ($target.attr('id') == 'STLesson') {
                    $('#fieldBranch').css('display', 'none');
                } else {
                    $('#fieldBranch').css('display', 'block');
                }
            });

        });
    </script>
    @if (_model.IsTrialLearner())
    {
            <script>
                $(function () {
                    $('#@(_dialogID) a[href="#TSTab"]').tab('show');
                });
            </script>
    }
    else
    {
        if(_profile.IsHealthCare())
        {
            <script>
                $(function() {
                    $('#@(_dialogID) a[href="#HSTab"]').tab('show');
                });
            </script>
        }
    }
</div>
