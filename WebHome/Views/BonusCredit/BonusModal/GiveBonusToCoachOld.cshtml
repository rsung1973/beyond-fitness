
@using System.IO
@using System.Linq.Expressions

@using WebHome.Helper
@using WebHome.Models.Locale
@using WebHome.Models.ViewModel
@using WebHome.Models.DataEntity
@using WebHome.Controllers
@using Microsoft.AspNetCore.Mvc.ModelBinding
@using Newtonsoft.Json
@{

    ModelStateDictionary _modelState;
    ModelSource<UserProfile> models;
    IQueryable<CoachMonthlySalary> _model;
    String _dialogID = $"coachBonus{DateTime.Now.Ticks}";


    _modelState = ViewContext.ModelState;
    models = (ModelSource<UserProfile>)ViewContext.HttpContext.Items["Models"];;
    _model = (IQueryable<CoachMonthlySalary>)this.Model;
}
@{ 
    AchievementQueryViewModel _viewModel = (AchievementQueryViewModel)ViewBag.ViewModel;
    var targetItems = _model.Where(d => !d.SpecialBonus.HasValue && !d.ManagerBonus.HasValue);
}
<div class="modal fade" id="@(_dialogID)" tabindex="-1" role="dialog" aria-labelledby="exampleModalLongTitle" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-body">
                <a class="closebutton" data-dismiss="modal"></a>
                <div class="row clearfix">
                    <div class="col-12">
                        <div class="card action_bar">
                            <div class="header">
                                <h2>新增獎金設定</h2>
                            </div>
                            <div class="body">
                                <div class="row clearfix">
                                    <div class="col-lg-6 col-md-6 col-sm-6 col-12">
                                        <div class="input-group">
                                            <input type="text" name="ManagerBonus" class="form-control form-control-danger" placeholder="管理獎金" />
                                            <span class="input-group-addon">
                                                <i class="zmdi zmdi-shopping-cart-plus"></i>
                                            </span>
                                        </div>
                                        @*<label class="material-icons help-error-text">clear 請輸入管理獎金</label>*@
                                    </div>
                                    <div class="col-lg-6 col-md-6 col-sm-6 col-12">
                                        <div class="input-group">
                                            <input type="text" name="SpecialBonus" class="form-control form-control-danger" placeholder="特別獎金" />
                                            <span class="input-group-addon">
                                                <i class="zmdi zmdi-money-box"></i>
                                            </span>
                                        </div>
                                        @*<label class="material-icons help-error-text">clear 請輸特別獎金</label>*@
                                    </div>
                                    <div class="col-12">
                                        <select name="ByCoachID" class="ms employeegroup" multiple="multiple">
                                            @foreach (var branch in models.GetTable<BranchStore>())
                                            {
                                                <optgroup label="@(branch.BranchName)">
                                                    @{ 
                                                        var items = targetItems.Where(t => t.WorkPlace == branch.BranchID)
                                                                        .Select(t => t.ServingCoach.UserProfile).ToList()
                                                                        .OrderBy(u => $"{u.Nickname}{u.RealName}");
                                                        foreach (var user in items)
                                                        {
                                                            <option value="@(user.UID)">@(user.FullName())</option>
                                                        }
                                                    }
                                                </optgroup>
                                            }
                                            <optgroup label="其他">
                                                @{
                                                    var others = targetItems.Where(t => !t.WorkPlace.HasValue)
                                                                        .Select(t => t.ServingCoach.UserProfile).ToList()
                                                                        .OrderBy(u => $"{u.Nickname}{u.RealName}");

                                                    foreach (var user in others)
                                                    {
                                                        <option value="@(user.UID)">@(user.FullName())</option>
                                                    }
                                                }
                                            </optgroup>
                                        </select>
                                        <script>
                                            $(function () {
                                                $('.employeegroup').multiSelect();
                                            });
                                        </script>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-darkteal btn-round waves-effect btnConfirm">確定</button>
            </div>
        </div>
    </div>
    @{ await Html.RenderPartialAsync("~/Views/ConsoleHome/Shared/BSModalScript.cshtml", model: _dialogID);}

    <script>
        $(function () {

            $('.btnConfirm').on('click', function (event) {
                var $formData = $('#@(_dialogID) input,select,textarea').serializeObject();
                $formData.AchievementDateFrom = '@($"{_viewModel.AchievementDateFrom:yyyy/MM/dd}")';
                clearErrors();
                showLoading();
                $.post('@Html.Raw(Url.Action("CommitCoachBonus","BonusCredit"))', $formData, function (data) {
                    if ($.isPlainObject(data)) {
                        if (data.result) {
                            $global.closeAllModal();
                            showCoachBonusList();
                        } else {
                            hideLoading();
                            Swal.fire(
                                'Oops...',
                                data.message,
                                'warning'
                            );
                         }
                    } else {
                        hideLoading();
                        $(data).appendTo('body').remove();
                    }
                });
            });
        });
    </script>
</div>

