@using System.IO
@using System.Linq.Expressions

@using WebHome.Helper
@using WebHome.Models.Locale
@using WebHome.Models.ViewModel
@using WebHome.Models.DataEntity
@using WebHome.Models.Timeline
@using WebHome.Controllers
@using Microsoft.AspNetCore.Mvc.ModelBinding
@using Newtonsoft.Json
@{


    ModelStateDictionary _modelState;
    ModelSource<UserProfile> models;
    IQueryable<CourseContract> _model;

    _modelState = (ModelStateDictionary)ViewBag.ModelState;
    models = (ModelSource<UserProfile>)ViewContext.HttpContext.Items["Models"];
    _model = (IQueryable<CourseContract>)this.Model;
    IQueryable<RegisterLesson> lessons = ViewBag.DataItems as IQueryable<RegisterLesson>;
    UserProfile profile = (await Context.GetUserAsync()).LoadInstance(models);
}
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>BEYOND FITNESS - 我的合約</title>
    <!-- CSS  -->
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
    <!-- materialize  -->
    <link href="css/materialize.css" type="text/css" rel="stylesheet" media="screen,projection" />
    <!-- livIconsevo  -->
    <link href='css/livIconsevo/LivIconsEvo.css' rel='stylesheet' type='text/css'>
    <link href="css/livIconsevo/LivIconsEvo.css" rel="stylesheet" type="text/css">
    <!-- scrollup-master  -->
    <link href="css/scrollup-master/themes/image.css?1.1" rel="stylesheet" id="scrollUpTheme">

    <!-- STYLE 要放最下面  -->
    <link href="css/style.css?1.5" type="text/css" rel="stylesheet" media="screen,projection" />
    <link rel="icon" href="favicons/favicon_96x96.png">
    <!-- Specifying a Webpage Icon for Web Clip -->
    <link rel="apple-touch-icon-precomposed" href="favicons/favicon_57x57.png">
    <link rel="apple-touch-icon-precomposed" sizes="72x72" href="favicons/favicon_72x72.png">
    <link rel="apple-touch-icon-precomposed" sizes="114x114" href="favicons/favicon_114x114.png">
    <link rel="apple-touch-icon-precomposed" sizes="144x144" href="favicons/favicon_144x144.png">
    <link rel="apple-touch-icon-precomposed" sizes="180x180" href="favicons/favicon_180x180.png">

</head>
<body>
    <!--//預設值為藍色 / 若要設定女生 請加上 mode-girls /  全版 full-fixed / 背景色 light-gray-->
    <div class="wrapper light-gray full-fixed">
        <div class="wrapper-fixed">
            <!--Header -->
            <nav class="white non-line" role="navigation">
                <div class="nav-wrapper container">
                    <!-- BACK -->
                    @{ await Html.RenderPartialAsync("~/Views/CornerKick/Module/ReturnHome.cshtml");}

                    <!-- // End of BACK -->
                    <a id="logo-container" href="#" class="brand-logo toptitle center">我的合約</a>
                </div>
            </nav>
            <!-- // End of Header -->
            <!-- main -->
            <div class="main">
                <div class="container">
                    <!--品牌LOGO -->
                    <!-- // End of 品牌LOGO -->
                    <div class="notice-wrap">
                        <div class="personal-info">
                            <div class="row valign-wrapper">
                                <div class="col s4 m2">
                                    @{
                                        ViewBag.ImgClass = "circle responsive-img valign";
                                        await Html.RenderPartialAsync("~/Views/CornerKick/Module/ProfileImage.cshtml", profile);
                                    }
                                </div>
                                <div class="col s8 m10 text-box">
                                    @{
                                        var items = _model.ToList();
                                        var unpaid = items.Where(c => c.TotalCost > c.TotalPaidAmount());
                                        var unpaidCount = unpaid.Count();
                                    }
                                    <span class="black-t18">@(profile.RealName)</span> <span class="black-t12">
                                        目前有 @(_model.Count()) 張生效中合約
                                        @if (unpaidCount > 0)
                                        {
                                            <br /><text>尚有 @(unpaidCount) 張未繳清款項</text>
                                        }
                                    </span>
                                </div>
                            </div>
                        </div>
                        <div class="container">
                            <ul>
                                @{
                                    var lessonItems = lessons
                                        .Where(r => r.LessonPriceType.Status == (int)Naming.LessonPriceStatus.點數兌換課程);

                                    //var lessonItems = lessons
                                    //        .Join(models.GetTable<ObjectiveLessonPrice>()
                                    //            .Where(c => c.CatalogID == (int)ObjectiveLessonCatalog.CatalogDefinition.OnLineFeedback),
                                    //            r => r.ClassLevel, c => c.PriceID, (r, c) => r);

                                    foreach (var item in lessonItems)
                                    {
                                        if (item.RemainedLessonCount() == 0)
                                        {
                                            continue;
                                        }
                                        <li>
                                            <i class="livicon-evo prefix" data-options="name: gift.svg; size: 30px; style: original; autoPlay:true"></i>
                                            <a>@(item.LessonPriceType.SimpleDescription) - @(item.RemainedLessonCount())/@(item.Lessons)</a>
                                            <div class="desc">
                                                @{
                                                    if (item.GroupingMemberCount > 1)
                                                    {
                                                        <span><i class="material-icons">people</i> 合約成員：@(String.Join("、", item.GroupingLesson.RegisterLesson.Select(m => m.UserProfile.RealName)))</span>
                                                    }
                                                }
                                            </div>
                                        </li>
                                    }
                                }
                                @{
                                    lessonItems = lessons.Where(r => r.LessonPriceType.IsWelfareGiftLesson != null);

                                    foreach (var item in lessonItems)
                                    {
                                        if (item.RemainedLessonCount() == 0)
                                        {
                                            continue;
                                        }
                                        <li>
                                            <i class="livicon-evo prefix" data-options="name: gift.svg; size: 30px; style: original; autoPlay:true"></i>
                                            <a>員工福利課 - @(item.RemainedLessonCount())/@(item.Lessons)</a>
                                        </li>
                                    }
                                }
                                @{
                                    unpaid = unpaid.Where(c => c.PayoffDue < DateTime.Today.AddMonths(1)).ToList();
                                    unpaidCount = unpaid.Count();
                                }
                                @if (unpaidCount > 0)
                                {
                                    items = items.Except(unpaid).ToList();
                                    foreach (var item in unpaid)
                                    {
                                        <li>
                                            <i class="livicon-evo prefix" data-options="name: alarm.svg; size: 30px; style: original; autoPlay:true"></i>
                                            <a>@(item.ContractName()) - @(item.RemainedLessonCount())/@(item.Lessons)</a>
                                            <a href="@Html.Raw(Url.Action("GetContractPdf", "CourseContract", new { KeyID = item.ContractID.EncryptKey() }))" target="_blank"><i class="material-icons right">attachment</i></a>
                                            <div class="desc">
                                                <span class="f-red"><i class="material-icons">warning</i> 提醒您合約繳款截止日即將於@($"{item.PayoffDue:yyyy/MM/dd}")到期，請記得聯絡您的教練喔！</span>
                                                @{
                                                    WriteContractContent(item);
                                                }
                                            </div>
                                        </li>
                                    }
                                }
                                @{
                                    var expiring = items.Where(c => c.Expiration < DateTime.Today.AddMonths(3)).ToList();
                                }
                                @if (expiring.Count > 0)
                                {
                                    items = items.Except(expiring).ToList();
                                    foreach (var item in expiring)
                                    {
                                        <li>
                                            <i class="livicon-evo prefix" data-options="name: notebook.svg; size: 30px; style: lines-alt; autoPlay:true"></i>
                                            <a>@(item.ContractName()) - @(item.RemainedLessonCount())/@(item.Lessons)</a>
                                            <a href="@Html.Raw(Url.Action("GetContractPdf", "CourseContract", new { KeyID = item.ContractID.EncryptKey() }))" target="_blank"><i class="material-icons right">attachment</i></a>
                                            <div class="desc">
                                                <span class="f-red"><i class="material-icons">warning</i> 提醒您合約上課截止日即將於@($"{item.Expiration:yyyy/MM/dd}")到期，請記得聯絡您的教練喔！</span>
                                                @{
                                                    WriteContractContent(item);
                                                }
                                            </div>
                                        </li>
                                    }
                                }
                                @foreach (var item in items)
                                {
                                    <li>
                                        <i class="livicon-evo prefix" data-options="name: notebook.svg; size: 30px; style: lines-alt; autoPlay:true"></i>
                                        <a>@(item.ContractName()) - @(item.RemainedLessonCount())/@(item.Lessons)</a>
                                        <a href="@Html.Raw(Url.Action("GetContractPdf", "CourseContract", new { KeyID = item.ContractID.EncryptKey() }))" target="_blank"><i class="material-icons right">attachment</i></a>
                                        <div class="desc">
                                            @{
                                                WriteContractContent(item);
                                            }
                                        </div>
                                    </li>
                                }
                            </ul>
                        </div>
                    </div>
                </div>

            </div>
            <!-- // End of main -->
        </div>
        <!--// End of wrapper-fixed-->
    </div>
    <!--// End of wrapper-->
    <!-- Footer -->
    <!--<footer class="page-footer teal">
         <!-- // End of Footer -->
    <!--  Scripts-->
    <script src="js/libs/jquery-2.2.4.min.js"></script>
    <script src="js/materialize.js"></script>
    <script src="js/init.js"></script>
    <!-- LivIconsEvo  -->
    <script src="js/plugin/LivIconsEvo/tools/snap.svg-min.js"></script>
    <script src="js/plugin/LivIconsEvo/tools/TweenMax.min.js"></script>
    <script src="js/plugin/LivIconsEvo/tools/DrawSVGPlugin.min.js"></script>
    <script src="js/plugin/LivIconsEvo/tools/MorphSVGPlugin.min.js"></script>
    <script src="js/plugin/LivIconsEvo/tools/verge.min.js"></script>
    <script src="js/plugin/LivIconsEvo/LivIconsEvo.Tools.js"></script>
    <script src="js/plugin/LivIconsEvo/LivIconsEvo.defaults.js"></script>
    <script src="js/plugin/LivIconsEvo/LivIconsEvo.js"></script>
    <!-- scrollup-master  -->
    <script src="js/plugin/scrollup-master/jquery.scrollUp.min.js"></script>
    <script>
        $(function () {
            $.scrollUp({
                animation: 'fade',

                scrollImg: {
                    active: true,
                    type: 'background',
                    src: '../images/top.png'
                }
            });
            //countup
            $('.countuptime').each(function () {
                // no need to specify options unless they differ from the defaults
                var target = this;
                var endVal = parseInt($(this).attr('data-endVal'));
                theAnimation = new countUp(target, 0, endVal, 0, 2.5);
                theAnimation.start();
            });

        });


    </script>
</body>
</html>
@{
    await Html.RenderPartialAsync("~/Views/Common/JQueryHelper.cshtml");
    await Html.RenderPartialAsync("~/Views/CornerKick/Module/ModeGirls.cshtml", profile);
}

@{
    void WriteContractContent(CourseContract item)
    {
        <span>
            <i class="material-icons">person_pin_circle</i>
            @if (item.LessonPriceType.BranchStore?.IsVirtualClassroom() == true
                || item.CourseContractExtension.CourseBranch?.IsVirtualClassroom() == true)
            {
                <text>上課場所/簽約分店：遠距/@(item.CourseContractExtension.BranchStore.BranchName)</text>
            }
            else
            {
                <text>上課場所：@(item.CourseContractExtension.BranchStore.BranchName)</text>
            }
        </span>
        <span><i class="material-icons">calendar_today</i> 合約迄日：@($"{item.Expiration:yyyy/MM/dd}")</span>
        if (item.CourseContractMember.Count > 1)
        {
            <span><i class="material-icons">people</i> 合約成員：@(String.Join("、", item.CourseContractMember.Select(m => m.UserProfile.RealName)))</span>
        }
        if (item.RevisionList.Any(r => r.Reason == "展延"))
        {
            <span class="tag-blue badge">已展延</span>
        }
    }
}
