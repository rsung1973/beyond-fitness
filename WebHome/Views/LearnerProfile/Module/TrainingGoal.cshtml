
@using System.IO
@using System.Linq.Expressions

@using WebHome.Helper
@using WebHome.Models.Locale
@using WebHome.Models.ViewModel
@using WebHome.Models.DataEntity
@using WebHome.Controllers
@using Microsoft.AspNetCore.Mvc.ModelBinding
@{

    ModelStateDictionary _modelState;
    ModelSource<UserProfile> models;
    UserProfile _learner;

    _modelState = ViewContext.ModelState;
    models = (ModelSource<UserProfile>)ViewContext.HttpContext.Items["Models"];;
    _learner = (UserProfile)this.Model;
}
@{ 
    PersonalExercisePurpose purpose = _learner.PersonalExercisePurpose;
}
<div class="bullet todo"></div>
<div class="time">近期目標</div>
<div class="desc">
    <h3 class="col-green">週期性目標-@(purpose?.Purpose != null ? $"{purpose.Purpose}期" : "你知道你的學生為了什麼而努力嗎？")</h3>
    <h4>
        <ul class="list-unstyled">
            @{
                IQueryable<PersonalExercisePurposeItem> items = models.GetTable<PersonalExercisePurposeItem>()
                        .Where(p => p.UID == _learner.UID)
                        .Where(p => !p.CompleteDate.HasValue);
            }
            @if (items.Count() > 0)
            {
                foreach (var item in items)
                {
                    <li>
                        <label class="fancy-checkbox custom-bgcolor-green">
                            <input type="checkbox" name="ItemID" value="@(item.ItemID)" onclick="completePurposeItem(event);" />
                            <span>@(item.PurposeItem)</span>
                        </label>
                    </li>
                }
            }
        </ul>
    </h4>
</div>
<script>
    function completePurposeItem(event) {
        var event = event || window.event;
        var $target = $(event.target);
        Swal.fire({
            title: "確定完成此項目?",
            text: "完成近期目標",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: "#DD6B55",
            confirmButtonText: '確定',
            cancelButtonText: '取消',
            focusCancel: true
        }).then((result) => {
            if (result.isConfirmed) {
                showLoading();
                $.post('@Html.Raw(Url.Action("CompletePurposeItem", "ClassFacet", new { _learner.UID }))', { 'ItemID': $target.val() }, function (data) {
                    hideLoading();
                    if ($.isPlainObject(data)) {
                        if (data.result) {
                            loadMilestone(true);
                        } else {
                            Swal.fire(
                                'Oops...',
                                data.message,
                                'warning'
                            )
                        }
                    } else {
                        $(data).appendTo($('body')).remove();
                    }
                });
            } else {
                $target.prop('checked', false);
            }
        });
    }
</script>

