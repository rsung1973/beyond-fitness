
@using System.IO
@using System.Linq.Expressions

@using WebHome.Helper
@using WebHome.Models.Locale
@using WebHome.Models.ViewModel
@using WebHome.Models.DataEntity
@using WebHome.Controllers
@using WebHome.Components 
@using Microsoft.AspNetCore.Mvc.ModelBinding
@{

    ModelStateDictionary _modelState;
    ModelSource<UserProfile> models;
    UserProfile _learner;

    _modelState = ViewContext.ModelState;
    models = (ModelSource<UserProfile>)ViewContext.HttpContext.Items["Models"];;
    _learner = (UserProfile)this.Model;
}
@{
    PersonalExercisePurpose purpose = _learner.PersonalExercisePurpose;
}

<script>
    $(function () {
        $global.nomoreMilestone = function () {
            $('#btnMoreMilestone').remove();
        };
    });
</script>
<ul class="list-unstyled feeds_widget" id="milestoneItems">
    @{ 
        await Component.InvokeAsync<LoadCompleteExercisePurposeItemsViewComponent>(new ExercisePurposeViewModel { UID = _learner.UID });
    }
</ul>
<button id="btnMoreMilestone" onclick="loadMilestone();" class="btn btn-round btn-sm m-t-0 float-right">載入更多 ...</button>
<script>

    function loadMilestone(reload) {
        if (reload) {
            $('#milestoneItems').empty();
            $global.currentIndex = 0;
        }
        showLoading();
        $.post('@Html.Raw(Url.Action("LoadCompleteExercisePurposeItems", "LearnerProfile", new { _learner.UID }))', { 'currentIndex': $global.currentIndex }, function (data) {
            hideLoading();
            if ($.isPlainObject(data)) {
                Swal.fire(
                    'Oops...',
                    data.message,
                    'warning'
                )
            } else {
                $(data).appendTo($('#milestoneItems'));
            }
        });
    }

</script>

