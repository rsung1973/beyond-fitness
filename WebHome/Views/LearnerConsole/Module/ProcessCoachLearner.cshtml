
@using System.IO
@using System.Linq.Expressions

@using WebHome.Helper
@using WebHome.Models.Locale
@using WebHome.Models.ViewModel
@using WebHome.Models.DataEntity
@using WebHome.Controllers
@using Microsoft.AspNetCore.Mvc.ModelBinding
@using Newtonsoft.Json
@{
    ModelStateDictionary _modelState;
    ModelSource<UserProfile> models;
    String _dialogID = $"coachProcess{DateTime.Now.Ticks}";

    _modelState = ViewContext.ModelState;
    models = (ModelSource<UserProfile>)ViewContext.HttpContext.Items["Models"];;

    CoachLearnerQueryViewModel _viewModel = ViewBag.ViewModel as CoachLearnerQueryViewModel;
    var profile = await Context.GetUserAsync();

}
<div class="modal fade" id="@(_dialogID)" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-sm" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h6 class="title">請選擇執行功能</h6>
                <a class="closebutton" data-dismiss="modal"></a>
            </div>
            <div class="modal-popmenu-body">
                <div class="list-group">
                    @if (profile.IsAuthorizedSysAdmin() || profile.IsAssistant() || profile.IsOfficer() || profile.IsManager() || profile.IsViceManager())
                    {
                        if (models.GetTable<LearnerCoachProperty>()
                            .Where(p => p.PropertyID == (int)LearnerCoachProperty.PropertyType.PrimaryCoach)
                            .Where(p => p.UID == _viewModel.UID)
                            .Where(p => p.CoachID == _viewModel.CoachID)
                            .Any())
                        {
                            <a href="javascript:processCoachReview('@Html.Raw((new CoachLearnerQueryViewModel { CoachID = _viewModel.CoachID,UID = _viewModel.UID }).Serialize())');" class="list-group-item">解除主教練</a>
                        }
                        else
                        {
                            <a href="javascript:processCoachReview('@Html.Raw((new CoachLearnerQueryViewModel { CoachID = _viewModel.CoachID,UID = _viewModel.UID }).Serialize())');" class="list-group-item">認領主教練</a>
                        }
                    }

                    @if (models.GetTable<LearnerFitnessAdvisor>()
                       .Where(l => l.UID == _viewModel.UID)
                       .Where(l => l.CoachID == _viewModel.CoachID)
                       .Any())
                    {
                        <a href="javascript:deleteAdvisor('@Html.Raw((new CoachLearnerQueryViewModel { CoachID = _viewModel.CoachID,UID = _viewModel.UID }).Serialize())');" class="list-group-item">解除認領</a>
                    }
                    <a href="javascript:$('').launchDownload('@Html.Raw(Url.Action("LearnerProfile","ConsoleHome"))', { 'keyID': '@Html.Raw(_viewModel.UID.Value.EncryptKey())' });" class="list-group-item">X檔案</a>
                </div>
            </div>
        </div>
    </div>
    @{ await Html.RenderPartialAsync("~/Views/ConsoleHome/Shared/BSModalScript.cshtml", model: _dialogID);}

    <script>
        $(function () {

        });
    </script>
</div>

