@using System.IO
@using System.Linq.Expressions

@using WebHome.Helper
@using WebHome.Models.Locale
@using WebHome.Models.ViewModel
@using WebHome.Models.DataEntity
@using WebHome.Controllers
@using Microsoft.AspNetCore.Mvc.ModelBinding
@using Newtonsoft.Json
@using CommonLib.Utility
@functions
{
    ModelSource<UserProfile> models;
    ModelStateDictionary _modelState;
    UserProfile _model;
    CoachLearnerQueryViewModel _viewModel;
}
@{

    Layout = "~/Views/ConsoleHome/Template/MainPage.cshtml";

    models = (ModelSource<UserProfile>)ViewContext.HttpContext.Items["Models"]; ;
    _modelState = ViewContext.ModelState;
    _model = (UserProfile)this.Model;
    _viewModel = (CoachLearnerQueryViewModel)ViewBag.ViewModel;

}
@{
    ServingCoach _item = (ServingCoach)ViewBag.DataItem;
}
@section CustomHeader {
    <!-- JQuery DataTable Css -->
    <link href="plugins/jquery-datatable/DataTables-1.10.18/css/dataTables.bootstrap4.min.css" rel="stylesheet">
    <link href="plugins/jquery-datatable/Responsive-2.2.2/css/responsive.bootstrap4.min.css" rel="stylesheet">
    <link href="plugins/jquery-datatable/FixedColumns-3.2.5/css/fixedColumns.bootstrap4.min.css" rel="stylesheet">
    <!-- Bootstrap Datetimepick -->
    <link href="css/smartcalendar-2.css" rel="stylesheet" />
    <!-- Custom Css -->
    <link rel="stylesheet" href="css/customelist.css?2.0" />
    <!-- charts-c3 -->
    <link href="plugins/charts-c3/plugin.css?2.0" rel="stylesheet">
    <!-- dotdotdot JS -->
    <link href="plugins/dotdotdot/dotdotdot.css?2.0" rel="stylesheet" />
}

    <!-- Main Content -->
    <section class="content">
        @{
        ViewBag.BlockHeader = "我的學生";
        await Html.RenderPartialAsync("~/Views/ConsoleHome/Module/BlockHeader.cshtml", _model);
    }
    <!--目標與達成率-->
    <div class="container-fluid">
        <div class="row clearfix">
            <div class="col-lg-4 col-md-4 col-sm-12">
                @{
                    await ShowCoach(_item.UserProfile);
                }
            </div>
            <div class="col-lg-8 col-md-8 col-sm-12">
                <div class="card">
                    <div class="body">
                        <div class="row clearfix">
                            <div class="col-12">
                                @{
                                    await Html.RenderPartialAsync("~/Views/LearnerConsole/Module/LearnerActivityRateChart.cshtml");
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!--詳細資訊-->
    <div class="container-fluid payment">
        <div class="row clearfix">
            <h4 class="card-outbound-header m-l-15">詳細資料</h4>
            <div class="col-lg-12">
                <div class="card">
                    <div class="header">
                        <ul class="header-dropdown">
                            <li>
                                <a href="javascript:$('').launchDownload('@Html.Raw(Url.Action("CreateCoachLearnerXlsx","LearnerConsole"))',{ 'KeyID' : '@Html.Raw(_item.CoachID.EncryptKey())'},'report',true);"><i class="zmdi zmdi-download"></i></a>
                            </li>
                        </ul>
                    </div>
                    <div class="body">
                        <div class="table-responsive" id="learnerList">
                            <script>
                                $(function () {
                                    showCoachLearnerList($global.viewModel);
                                });
                            </script>
                        </div>
                        @if (_model.IsAuthorizedSysAdmin() || _model.IsAssistant() || _model.IsOfficer() || _model.IsManager() || _model.IsViceManager())
                        {
                            <button type="button" class="btn btn-warning btn-round waves-effect" onclick="batchCommitPrimaryCoach('@Html.Raw(_item.CoachID.EncryptKey())');">設定主教練</button>
                            <button type="button" class="btn btn-danger btn-round waves-effect" onclick="batchDeletePrimaryCoach('@Html.Raw(_item.CoachID.EncryptKey())');">解除主教練</button>
                        }
                        <button type="button" class="btn btn-danger btn-round waves-effect" onclick="batchDeleteAdvisor('@Html.Raw(_item.CoachID.EncryptKey())');">解除認領</button>
                        <script>
                            function showCoachLearnerList(viewModel) {
                                $global.viewModel = viewModel;
                                showLoading();
                                $.post('@Html.Raw(Url.Action("ShowCoachLearnerList", "LearnerConsole"))', viewModel, function (data) {
                                    hideLoading();
                                    if ($.isPlainObject(data)) {
                                        Swal.fire(
                                            'Oops...',
                                            data.message,
                                            'warning'
                                        );
                                    } else {
                                        $('#learnerList').empty().append($(data));
                                        $([document.documentElement, document.body]).animate({
                                            scrollTop: $("#learnerList").offset().top
                                        }, 2000);
                                    }
                                });
                            }
                        </script>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>


@section TailPageJavaScriptInclude {
    <!-- Echart Js -->
    <script src="plugins/echarts/echarts.min.js"></script>
    <!-- Echart Template Js -->
    <script src="plugins/echarts/theme/macarons.js"></script>
    <script src="plugins/echarts/theme/macarons_nero.js"></script>
    <!--Sparkline Plugin Js-->
    <script src="plugins/jquery-sparkline/jquery.sparkline.js"></script>
    <!-- SweetAlert Plugin Js -->
    <script src="plugins/sweetalert/sweetalert.min.js"></script>
    <!-- Jquery DataTable Plugin Js -->
    <script src="bundles/datatablescripts.bundle.js"></script>
    <script src="plugins/jquery-datatable/Responsive-2.2.2/js/dataTables.responsive.min.js"></script>
    <script src="plugins/jquery-datatable/FixedColumns-3.2.5/js/dataTables.fixedColumns.min.js"></script>
    <!--Gauge Plugin Js-->
    <script src="plugins/gauge/gauge.min.js"></script>
    <!-- dotdotodt Js -->
    <script src="plugins/dotdotdot/dotdotdot.js"></script>
    <!-- ChartC3 Js -->
    <script src="bundles/cs.bundles.js"></script>

    @{
        await Html.RenderPartialAsync("~/Views/ConsoleHome/Shared/KnobJS.cshtml");
    }

    <script>

        function processCoachLearner(keyID) {
            showLoading();
            $.post('@Html.Raw(Url.Action("ProcessCoachLearner", "LearnerConsole"))', { 'keyID': keyID }, function (data) {
                hideLoading();
                if ($.isPlainObject(data)) {
                    alert(data.message);
                } else {
                    $(data).appendTo($('body'));
                }
            });
        }

        function processCoachReview(keyID) {
            showLoading();
            $.post('@Html.Raw(Url.Action("ProcessPrimaryCoachReview", "LearnerConsole"))', { 'keyID': keyID }, function (data) {
                hideLoading();
                if ($.isPlainObject(data)) {
                    alert(data.message);
                } else {
                    $(data).appendTo($('body'));
                }
            });
        }

        function commitPrimaryCoach(keyID) {
            showLoading();
            $.post('@Html.Raw(Url.Action("CommitPrimaryCoach", "LearnerConsole"))', { 'keyID': keyID }, function (data) {
                hideLoading();
                if ($.isPlainObject(data)) {
                    Swal.fire(
                        '幹得好!',
                        '已認領主教練',
                        'success'
                    ).then((result)=>{
                        $('').launchDownload('@Html.Raw(Url.Action("LearnerOverview","ConsoleHome"))', $global.viewModel);
                    });
                } else {
                    $(data).appendTo('body').remove();
                }
            });
        }

        function batchCommitPrimaryCoach(keyID) {

            var viewModel = $('input[name="LearnerID"]').serializeObject();
            viewModel.KeyID = keyID;
            showLoading();
            $.post('@Html.Raw(Url.Action("BatchCommitPrimaryCoach", "LearnerConsole"))', viewModel, function (data) {
                hideLoading();
                if ($.isPlainObject(data)) {
                    Swal.fire(
                        '幹得好!',
                        '已認領主教練',
                        'success'
                    ).then((result)=>{
                        $('').launchDownload('@Html.Raw(Url.Action("LearnerOverview","ConsoleHome"))', $global.viewModel);
                    });
                } else {
                    $(data).appendTo('body').remove();
                }
            });
        }

        function deletePrimaryCoach(keyID) {
            showLoading();
            $.post('@Html.Raw(Url.Action("DeletePrimaryCoach", "LearnerConsole"))', { 'keyID': keyID }, function (data) {
                hideLoading();
                if ($.isPlainObject(data)) {
                    Swal.fire(
                        '幹得好!',
                        '已解除主教練',
                        'success'
                    ).then((result)=>{
                        $('').launchDownload('@Html.Raw(Url.Action("LearnerOverview","ConsoleHome"))', $global.viewModel);
                    });
                } else {
                    $(data).appendTo('body').remove();
                }
            });
        }

        function deleteAdvisor(keyID) {
            showLoading();
            $.post('@Html.Raw(Url.Action("DeleteAdvisor", "LearnerConsole"))', { 'keyID': keyID }, function (data) {
                hideLoading();
                if ($.isPlainObject(data)) {
                    Swal.fire(
                        '幹得好!',
                        '已解除認領',
                        'success'
                    ).then((result)=>{
                        $('').launchDownload('@Html.Raw(Url.Action("LearnerOverview","ConsoleHome"))', $global.viewModel);
                    });
                } else {
                    $(data).appendTo('body').remove();
                }
            });
        }

        function batchDeleteAdvisor(keyID) {

            var viewModel = $('input[name="LearnerID"]').serializeObject();
            viewModel.KeyID = keyID;
            showLoading();
            $.post('@Html.Raw(Url.Action("BatchDeleteAdvisor", "LearnerConsole"))', viewModel, function (data) {
                hideLoading();
                if ($.isPlainObject(data)) {
                    Swal.fire(
                        '幹得好!',
                         '已解除認領',
                        'success'
                    ).then((result)=>{
                        $('').launchDownload('@Html.Raw(Url.Action("LearnerOverview","ConsoleHome"))', $global.viewModel);
                    });
                } else {
                    $(data).appendTo('body').remove();
                }
            });
        }

        function batchDeletePrimaryCoach(keyID) {

            var viewModel = $('input[name="LearnerID"]').serializeObject();
            viewModel.KeyID = keyID;
            showLoading();
            $.post('@Html.Raw(Url.Action("BatchDeletePrimaryCoach", "LearnerConsole"))', viewModel, function (data) {
                hideLoading();
                if ($.isPlainObject(data)) {
                    Swal.fire(
                        '幹得好!',
                         '已解除主教練',
                        'success'
                    ).then((result)=>{
                        $('').launchDownload('@Html.Raw(Url.Action("LearnerOverview","ConsoleHome"))', $global.viewModel);
                    });
                } else {
                    $(data).appendTo('body').remove();
                }
            });
        }

        function checkAll(element) {
            var checked = $(element).is(':checked');
            var idx = $('input[name=\'LearnerID\']').length / 2 - 1; 
            var s = 'input[name=\'LearnerID\']:gt(' + idx + ')'; 
            setTimeout(function(){
                $(s).prop('checked', checked);
            },500);
        }

        $(function () {

            window.onresize = function () {
                if ($global.echarts.myChart) {
                    $global.echarts.myChart.resize();
                }
            };
        });
    </script>

}

@functions
{
    async Task ShowCoach(UserProfile coach)
    {
        var effectiveItems = models.PromptEffectiveContract();
        var effectiveLearners = models.GetTable<CourseContractMember>()
                                    .Join(effectiveItems, m => m.ContractID, c => c.ContractID, (m, c) => m);
        var learners = models.GetTable<LearnerFitnessAdvisor>().Where(l => l.CoachID == coach.UID);

    <div class="card member-card">
                        <div class="header bg-darkteal">
                            <h4 class="m-t-10">@(coach.FullName())</h4>
                        </div>
                        <div class="member-img">
                            <a href="javascript:void(0);">
                                @{
                        ViewBag.ProfileClass = "rounded-circle small";
                        await Html.RenderPartialAsync("~/Views/Common/ProfileImage.cshtml", coach);
                                }
                            </a>
                            <p class="text-muted">@(coach.ServingCoach?.ProfessionalLevel?.LevelName)</p>
                            <hr>
                        </div>
                        <div class="body">
                            <div class="row">
                                <div class="col-4" onclick='showCoachLearnerList(@Html.Raw((new CoachLearnerQueryViewModel{ KeyID = coach.UID.EncryptKey(), WithContract=true }).JsonStringify()));'>
                                    <h5>@(learners.Count(l => effectiveLearners.Any(f => f.UID == l.UID)))</h5>
                                    <small>所屬學生(合約)</small>
                                </div>
                                <div class="col-4" onclick='showCoachLearnerList(@Html.Raw((new CoachLearnerQueryViewModel{ KeyID = coach.UID.EncryptKey(), ForPrimary = true }).JsonStringify()));'>
                                    <h5>
                                        @(models.GetTable<LearnerCoachProperty>()
                            .Where(p => p.PropertyID == (int)LearnerCoachProperty.PropertyType.PrimaryCoach)
                            .Where(p => p.CoachID == coach.UID)
                            .Where(p => effectiveLearners.Any(l => l.UID == p.UID))
                            .Count())
                                    </h5>
                                    <small>主教練學生(合約)</small>
                                </div>
                                <div class="col-4" onclick='showCoachLearnerList(@Html.Raw((new CoachLearnerQueryViewModel{ KeyID = coach.UID.EncryptKey(), WithContract=false }).JsonStringify()));'>
                                    <h5>@(learners.Count(l => !effectiveLearners.Any(f => f.UID == l.UID)))</h5>
                                    <small>所屬學生(無合約)</small>
                                </div>
                            </div>
                        </div>
    </div>
    }
}
