
@using System.IO
@using System.Linq.Expressions

@using WebHome.Helper
@using WebHome.Models.Locale
@using WebHome.Models.ViewModel
@using WebHome.Models.DataEntity
@using WebHome.Controllers
@using Microsoft.AspNetCore.Mvc.ModelBinding
@using Newtonsoft.Json
@using CommonLib.Utility
@{
    ModelStateDictionary _modelState;
    ModelSource<UserProfile> models;
    LessonQueryViewModel _viewModel;
    _modelState = ViewContext.ModelState;
    models = (ModelSource<UserProfile>)ViewContext.HttpContext.Items["Models"];

    _viewModel = (LessonQueryViewModel)ViewBag.ViewModel;

}

@{
    var coachItems = models.PromptEffectiveCoach()
                        .Where(c => Naming.LevelName.Contains(c.ProfessionalLevel.LevelName));

    if(_viewModel.BranchID.HasValue)
    {
        coachItems = coachItems.Where(c => c.CoachWorkplace.Any(w => w.BranchID == _viewModel.BranchID));
    }

    var data = Naming.LevelName.Select(n => new
    {
        value = coachItems.Count(p => p.ProfessionalLevel.LevelName == n),
        name = n
    }).ToList();

}
@{ 
    await Html.RenderPartialAsync("~/Views/BusinessConsole/Module2021/InitEcharts.cshtml");
}
<script>
    $global.echarts.option = 
    {
        legend: {
            left: 'center',
        },
        toolbox: {
            show: false,
        },
        series: [
            {
                type: 'pie',
                radius: '50%',
                data: @Html.Raw(data.JsonStringify())
            }
        ]
    };

    $(function () {
        if ($global.echarts.showChart) {
            $global.echarts.showChart();
        }
    });

</script>

