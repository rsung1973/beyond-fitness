@using System.IO
@using System.Linq.Expressions

@using WebHome.Helper
@using WebHome.Models.Locale
@using WebHome.Models.ViewModel
@using WebHome.Models.DataEntity
@using WebHome.Controllers
@using CommonLib.Utility
@using Microsoft.AspNetCore.Mvc.ModelBinding

@using Newtonsoft.Json
@functions
{
    ModelStateDictionary _modelState;
    ModelSource<UserProfile> models;
    MonthlyIndicator _model;

    int DataCount(IQueryable<MonthlyCoachRevenueIndicator> items, int? lower, int? upper)
    {
        if (lower.HasValue)
        {
            items = items.Where(m => m.AcademicGrades >= lower);
        }
        if (upper.HasValue)
        {
            items = items.Where(m => m.AcademicGrades < upper);
        }
        return items.Count();
    }
}
@{
    MonthlyIndicatorQueryViewModel _viewModel;

    _modelState = ViewContext.ModelState;
    models = (ModelSource<UserProfile>)ViewContext.HttpContext.Items["Models"]; ;
    _model = (MonthlyIndicator)this.Model;
    _viewModel = (MonthlyIndicatorQueryViewModel)ViewBag.ViewModel;
}

@{
    IQueryable<MonthlyCoachRevenueIndicator> dataItems = (IQueryable<MonthlyCoachRevenueIndicator>)ViewContext.HttpContext.Items["AssessmentReview"];

    object[][] dataIdx = new object[][]
    {
        new object[]{"80以下",(int?)null,80,0 },
        new object[]{"80-84",80,85,0 },
        new object[]{"85-89",85,90,0 },
        new object[]{"90以上",90,(int?)null,0 },
    };

    foreach (var idx in dataIdx)
    {
        idx[3] = DataCount(dataItems, (int?)idx[1], (int?)idx[2]);
    }

    ViewContext.HttpContext.Items["AcademicGrades"] = dataIdx;
}


