@using System.IO
@using System.Linq.Expressions

@using WebHome.Helper
@using WebHome.Models.Locale
@using WebHome.Models.ViewModel
@using WebHome.Models.DataEntity
@using WebHome.Controllers
@using Microsoft.AspNetCore.Mvc.ModelBinding
@using Newtonsoft.Json
@using CommonLib.Utility

@functions
{
    ModelStateDictionary _modelState;
    ModelSource<UserProfile> models;
    MonthlyIndicatorQueryViewModel _viewModel;
    MonthlyIndicator _model;
}
@{
    _modelState = ViewContext.ModelState;
    models = (ModelSource<UserProfile>)ViewContext.HttpContext.Items["Models"];
    _model = (MonthlyIndicator)this.Model;
    _viewModel = (MonthlyIndicatorQueryViewModel)ViewBag.ViewModel;

}

@{
    IQueryable<ServingCoach> coachItems = models.GetTable<ServingCoach>();

    if (_viewModel.BranchID.HasValue)
    {
        var workPlace = models.GetTable<V_WorkPlace>().Where(w => w.WorkPlace == _viewModel.BranchID);
        coachItems = coachItems.Where(c => workPlace.Any(w => w.CoachID == c.CoachID));
    }

    var dataItems = models.GetTable<MonthlyCoachRevenueIndicator>().Where(m => m.PeriodID == _model.PeriodID)
                        .Join(coachItems, m => m.CoachID, c => c.CoachID, (m, c) => m);
}

<table class="table table-striped table-custom nowrap dataTable-assessment" style="width:100%">
    <thead class="bg-darkteal">
        <tr>
            <th>姓名</th>
            <th>分店</th>
            <th>Level</th>
            <th>學科成績</th>
            <th>術科成績</th>
        </tr>
    </thead>
    <tbody>
        @{
            foreach (var item in dataItems)
            {
                var coach = item.ServingCoach;
                var profile = coach.UserProfile;
                <tr>
                    <td>
                        <span class="list-icon">
                            @{
                                ViewBag.ProfileClass = "patients-img";
                                await Html.RenderPartialAsync("~/Views/Common/ProfileImage.cshtml", profile);
                            }
                        </span>
                        <span class="hidden-sm-down">
                            @(
                            profile.FullName()
                                )
                        </span>
                    </td>
                    <td>
                        @(coach.CoachWorkplace.Count == 1
                        ? coach.CoachWorkplace.First().BranchStore.BranchName
                        : "")
                    </td>
                    <td>
                        @(
                        item.ProfessionalLevel?.LevelName
                            )
                    </td>
                    <td>
                        <div class="input-group">
                            <input type="text" class="form-control form-control-danger"
                                   placeholder="學科成績" name="AcademicGrades" value="@(item.AcademicGrades)" />
                            <span class="input-group-addon">
                                <i class="zmdi zmdi-edit"></i>
                            </span>
                        </div>
                    </td>
                    <td>
                        <div class="input-group">
                            <input type="text" class="form-control form-control-danger"
                                   placeholder="術科成績" name="TechnicalGrades" value="@(item.TechnicalGrades)" />
                            <span class="input-group-addon">
                                <i class="zmdi zmdi-edit"></i>
                            </span>
                        </div>
                        <input type="hidden" name="PersonID" value="@(coach.CoachID)" />
                    </td>
                </tr>
            }
        }
    </tbody>
</table>


<script>

    $(function () {

        if ($global.dtAssessment != undefined) {
            $global.dtAssessment.destroy();
        }

        $global.dtAssessment = $('.dataTable-assessment').DataTable({
            "order": [
                [2, 'asc']
            ],
            "paging": false,
            "pageLength": 30,
            "lengthMenu": [
                [30, 50, 100, -1],
                [30, 50, 100, "全部"]
            ],
            "bInfo": true,//頁尾資訊
            "searching": true,  //搜尋框，不顯示
            "language": {
                "lengthMenu": "每頁顯示 _MENU_ 筆資料",
                "zeroRecords": "沒有資料也是種福氣",
                "info": "共 _TOTAL_ 筆，目前顯示第 _START_ 至 _END_筆資料",
                "infoEmpty": "顯示 0 筆的資料",
                "infoFiltered": "(總共從 _MAX_ 筆資料過濾)",
                "loadingRecords": "快馬加鞭處理中...",
                "processing": "快馬加鞭處理中...",
                "search": "快速搜尋：",
                "paginate": {
                    "first": "第一頁",
                    "last": "最後一頁",
                    "next": "下一頁",
                    "previous": "前一頁"
                },
            },
            scrollX: true,
            scrollCollapse: true,
            fixedColumns: {
                leftColumns: 2,
            },
        });

        setTimeout(function () {
            var $btnSelect = $('.dataTables_length div.btn-group.bootstrap-select.form-control.form-control-sm');
            var $menu = $btnSelect.find('select');
            $btnSelect.before($menu);
            $btnSelect.remove();
        }, 1000);

        $('.dataTable-assessment').resize();

    });

</script>