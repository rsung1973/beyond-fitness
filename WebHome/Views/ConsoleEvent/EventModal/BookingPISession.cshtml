
@using System.IO
@using System.Linq.Expressions

@using WebHome.Helper
@using WebHome.Models.Locale
@using WebHome.Models.ViewModel
@using WebHome.Models.DataEntity
@using WebHome.Controllers
@using Microsoft.AspNetCore.Mvc.ModelBinding
@{

    ModelStateDictionary _modelState;
    ModelSource<UserProfile> models;
    UserProfile _model;
    CalendarEventViewModel _viewModel;
    String _dialogID = $"booking{DateTime.Now.Ticks}";
    UserProfile _profile;
    IQueryable<CourseContract> _contracts;
    IQueryable<EnterpriseCourseContract> _enterpriseContract;

    BookingLessonPageModel _pageModel = (BookingLessonPageModel)ViewBag.PageModel;

    _modelState = ViewContext.ModelState;
    models = (ModelSource<UserProfile>)ViewContext.HttpContext.Items["Models"];;
    _model = (UserProfile)this.Model;
    _viewModel = (CalendarEventViewModel)ViewBag.ViewModel;
    _profile = await Context.GetUserAsync();
    _contracts = models.GetTable<CourseContractMember>()
        .Where(m => m.UID == _model.UID)
            .Join(models.GetTable<CourseContract>(), m => m.ContractID, t => t.ContractID, (m, t) => t);
    _enterpriseContract = models.GetTable<EnterpriseCourseMember>()
        .Where(m => m.UID == _model.UID)
            .Join(models.GetTable<EnterpriseCourseContract>()
                .Where(c => c.Expiration >= DateTime.Today)
                , m => m.ContractID, t => t.ContractID, (m, t) => t);

}
@{
    var enterpriseLessons = _enterpriseContract.Join(models.GetTable<RegisterLessonEnterprise>(), t => t.ContractID, r => r.ContractID, (t, r) => r);
    var enterpriseTrial = enterpriseLessons.Where(r => r.EnterpriseCourseContent.EnterpriseLessonType.Status == (int)Naming.LessonPriceStatus.體驗課程);
    var enterpriseTrialItem = enterpriseTrial.FirstOrDefault();
}

@{
    var contractLessons = _contracts.Join(models.GetTable<RegisterLessonContract>(), c => c.ContractID, r => r.ContractID, (c, r) => r)
                            .Select(r => r.RegisterLesson)
                            .Where(r => r.UID == _model.UID)
                            .Where(r => r.Attended != (int)Naming.LessonStatus.課程結束);

    List<int> installmentID = new List<int>();

    var lessons = models.GetTable<RegisterLesson>()
                    .Where(r => r.UID == _model.UID)
                    .Where(r => r.Attended != (int)Naming.LessonStatus.課程結束);

}
@{
    var courseContent = _enterpriseContract
                .Join(models.GetTable<EnterpriseCourseContent>(),
                    t => t.ContractID, c => c.ContractID, (t, c) => c);
}
@*@{
    _pageModel.HasChoice = true;
}*@
<li class="list-group-item">
    <div class="media">
        <div class="pull-left">
            <div class="controls">
                <label class="fancy-checkbox">
                    <input type="checkbox" id="PILesson" name="RegisterID" value="" onclick="selectBooking(this, '@((int)Naming.LessonPriceStatus.自主訓練)',15);">
                    <span></span>
                </label>
            </div>
        </div>
        <div class="media-body">
            <div class="media-heading">
                <a class="m-r-10">
                    一般自主(60分鐘)
                </a>
                <small class="float-right text-muted"><time>NT 300</time></small>
            </div>
        </div>
    </div>
</li>
<li class="list-group-item">
    <div class="media">
        <div class="pull-left">
            <div class="controls">
                <label class="fancy-checkbox">
                    <input type="checkbox" name="RegisterID" value="" onclick="selectBooking(this, '@((int)Naming.LessonPriceStatus.自主訓練)',383);">
                    <span></span>
                </label>
            </div>
        </div>
        <div class="media-body">
            <div class="media-heading">
                <a class="m-r-10">
                    有氧自主(60分鐘)
                </a>
                <small class="float-right text-muted"><time>NT 150</time></small>
            </div>
        </div>
    </div>
</li>
<li class="list-group-item">
    <div class="media">
        <div class="pull-left">
            <div class="controls">
                <label class="fancy-checkbox">
                    <input type="checkbox" name="RegisterID" value="" onclick="selectBooking(this, '@((int)Naming.LessonPriceStatus.自主訓練)',384);">
                    <span></span>
                </label>
            </div>
        </div>
        <div class="media-body">
            <div class="media-heading">
                <a class="m-r-10">
                    親屬自主(60分鐘)
                </a>
                <small class="float-right text-muted"><time>NT 150</time></small>
            </div>
        </div>
    </div>
</li>

@foreach (var content in courseContent.Where(r => r.TypeID == (int)Naming.EnterpriseLessonTypeDefinition.自主訓練))
{
    var enterprisePI = content.RegisterLessonEnterprise
            .Select(r => r.RegisterLesson).Where(r => r.UID == _model.UID);
    var bookableLessons = enterprisePI.Where(r => r.LessonTime == null);
    var item = bookableLessons.FirstOrDefault();
    if (item != null)
    {
        _pageModel.HasChoice = true;
    }
    <li class="list-group-item">
        <div class="media">
            <div class="pull-left">
                <div class="controls">
                    <label class="fancy-checkbox">
                        <input type="checkbox" @(item == null ? "disabled" : null) id="enterprisePI@(item?.RegisterID)" name="RegisterID" value="@(item?.RegisterID)" onclick="selectBooking(this, '@((int)Naming.LessonPriceStatus.企業合作方案)');">
                        <span></span>
                    </label>
                </div>
            </div>
            <div class="media-body">
                <div class="media-heading">
                    <a class="m-r-10">P.I session（企業方案）- @(content.EnterpriseLessonType.Description)</a>
                    <small class="float-right text-muted"><time>@(bookableLessons.Count())/@(enterprisePI.Count())</time></small>
                </div>
                <div class="msg">
                    @(content.EnterpriseCourseContract.Subject)
                    <span class="float-right">
                    @{
                        await Html.RenderPartialAsync("~/Views/Common/BranchStoreName.cshtml", content.EnterpriseCourseContract.BranchStore);
                    }
                    </span>
                </div>
                <p class="msg col-blue">
                    <i class="zmdi zmdi-alarm-check"></i> 合約迄日：@($"{content.EnterpriseCourseContract.Expiration:yyyy/MM/dd}")
                </p>
            </div>
        </div>
    </li>
}
@{
    _pageModel.HasChoice = true;
}
<li class="list-group-item">
    <div class="media">
        <div class="pull-left">
            <div class="controls">
                <label class="fancy-checkbox">
                    <input type="checkbox" id="STLesson" name="RegisterID" value="" onclick="selectBooking(this, '@((int)Naming.LessonPriceStatus.在家訓練)');">
                    <span></span>
                </label>
            </div>
        </div>
        <div class="media-body">
            <div class="media-heading">
                <a class="m-r-10">S.T session</a>
                <div class="msg">
                    <span class="float-right">
                        <span class="badge bg-amber"><i class="zmdi zmdi-pin"></i> 甜蜜的家</span>
                    </span>
                </div>
            </div>
        </div>
    </div>
</li>
