
@using System.IO
@using System.Linq.Expressions

@using WebHome.Helper
@using WebHome.Models.Locale
@using WebHome.Models.ViewModel
@using WebHome.Models.DataEntity
@using WebHome.Controllers
@using Microsoft.AspNetCore.Mvc.ModelBinding
@using Newtonsoft.Json
@{
    ModelStateDictionary _modelState;
    ModelSource<UserProfile> models;
    CourseContract _model;
    String _dialogID = $"contractProcess{DateTime.Now.Ticks}";
    UserProfile _profile;

    _modelState = ViewContext.ModelState;
    models = (ModelSource<UserProfile>)ViewContext.HttpContext.Items["Models"];;
    _model = (CourseContract)this.Model;
    _profile = (await Context.GetUserAsync()).LoadInstance(models);
}
<div class="modal fade" id="@(_dialogID)" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-sm" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h6 class="title">請選擇執行功能</h6>
                <a class="closebutton" data-dismiss="modal"></a>
            </div>
            <div class="modal-popmenu-body">
                <div class="list-group">
                    @if (_model.CourseContractRevision == null)
                    {
                        if (_model.IsEditable(models, _profile))
                        {
                            <a href="@Html.Raw(Url.Action("EditCourseContract", "ConsoleHome", new { KeyID = _model.ContractID.EncryptKey() }))" class="list-group-item">編輯資料</a>
                            <a href="javascript:deleteData('@_model.ContractID.EncryptKey()');" class="list-group-item">刪除資料</a>
                        }
                        else if (_model.IsSignable(models, _profile))
                        {
                            <a href="@Html.Raw(Url.Action("SignCourseContract", "ConsoleHome", new { KeyID = _model.ContractID.EncryptKey() }))" class="list-group-item">學生簽名</a>
                        }
                        else if (_model.IsApprovable(models, _profile))
                        {
                            <a href="@Html.Raw(Url.Action("SignCourseContract", "ConsoleHome", new { KeyID = _model.ContractID.EncryptKey() }))" class="list-group-item">主管審核</a>
                        }
                        else if (_model.IsPayable(models)
                            && (_profile.IsAssistant() || _profile.IsAuthorizedSysAdmin() || _profile.IsServitor()
                                || (_profile.IsCoach() && models.GetTable<CoachWorkplace>().Any(c => c.CoachID == _profile.UID && c.BranchID == _model.CourseContractExtension.BranchID)))
                            && !_model.HasEarlyUnpaidInstallments(models))
                        {
                            <a href="@Html.Raw(Url.Action("EditPaymentForContract", "ConsoleHome", new { KeyID = _model.ContractID.EncryptKey() }))" class="list-group-item">新增收款</a>
                        }
                        if (_model.Status >= (int)Naming.CourseContractStatus.已生效 && _model.SequenceNo == 0)
                        {
                            <a href="@Html.Raw(Url.Action("ApplyContractService", "ConsoleHome", new { KeyID = _model.ContractID.EncryptKey() }))" class="list-group-item">服務申請</a>
                        }
                        <a href="javascript:$global.showContractDetails('@(_model.ContractID.EncryptKey())');" class="list-group-item">詳細資訊</a>
                        await Html.RenderPartialAsync("~/Views/ContractConsole/Indication/ContractDetails.cshtml", _model);

                        if (_model.Status > (int)Naming.CourseContractStatus.待審核 && _model.ContractID > 1045)
                        {
                            if (!(_profile.IsOfficer() && _profile.UserRoleAuthorization.Count() == 1))
                            {
                                <a href="@Html.Raw(Url.Action("GetContractPdf", "CourseContract", new { KeyID = _model.ContractID.EncryptKey() }))" target="_blank" class="list-group-item">電子合約</a>
                            }
                        }
                    }
                    else
                    {
                        <a href="javascript:$global.showContractDetails('@(_model.CourseContractRevision.OriginalContract.Value.EncryptKey())');" class="list-group-item">主約詳細資訊</a>
                        { await Html.RenderPartialAsync("~/Views/ContractConsole/Indication/ContractDetails.cshtml", _model); }
                        <a href="@Html.Raw(Url.Action("ApplyContractService", "ConsoleHome", new { KeyID = _model.CourseContractRevision.OriginalContract.Value.EncryptKey() }))" class="list-group-item">服務申請</a>
                        if (_model.IsServiceApprovable(models, _profile))
                        {
                            <a href="@Html.Raw(Url.Action("SignContractService","ConsoleHome",new { KeyID = _model.ContractID.EncryptKey() }))" class="list-group-item">主管審核</a>
                        }
                        else if (_model.IsServiceSignable(models, _profile))
                        {
                            <a href="@Html.Raw(Url.Action("SignContractService","ConsoleHome",new { KeyID = _model.ContractID.EncryptKey() }))" class="list-group-item">學生簽名</a>
                        }
                        if (_model.Status == (int)Naming.CourseContractStatus.已生效)
                        {
                            if (!(_profile.IsOfficer() && _profile.UserRoleAuthorization.Count() == 1))
                            {
                                <a href="@Html.Raw(Url.Action("GetContractAmendmentPdf","CourseContract",new { KeyID = _model.ContractID.EncryptKey() }))" target="_blank" class="list-group-item">電子合約</a>
                            }
                        }
                    }
                </div>
            </div>
        </div>
    </div>
    @{ await Html.RenderPartialAsync("~/Views/ConsoleHome/Shared/BSModalScript.cshtml", model: _dialogID);}

    <script>
        $(function () {

        });
    </script>
</div>

