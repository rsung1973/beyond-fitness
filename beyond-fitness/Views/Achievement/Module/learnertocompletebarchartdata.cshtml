
@using System.IO
@using System.Linq.Expressions

@using WebHome.Helper
@using WebHome.Models.Locale
@using WebHome.Models.ViewModel
@using WebHome.Models.DataEntity
@using WebHome.Controllers
@using Newtonsoft.Json
@(JsonConvert.SerializeObject(result))
<script runat="server">

    ModelStateDictionary _modelState;
    ModelSource<UserProfile> models;
    IQueryable<LessonTime> _model;
    AchievementQueryViewModel _viewModel;
    Object result;

    protected override void OnInit(EventArgs e)
    {
        base.OnInit(e);
        _modelState = (ModelStateDictionary)ViewBag.ModelState;
        models = ((SampleController<UserProfile>)ViewContext.Controller).DataSource;
        _model = (IQueryable<LessonTime>)this.Model;
        _viewModel = (AchievementQueryViewModel)ViewBag.ViewModel;

        var items = _model.GroupBy(l => l.AttendingCoach)
                        .Select(g => g.Key).ToArray();
        result = new
        {
            labels = items.Select(g => models.GetTable<UserProfile>().Where(u => u.UID == g).Select(u => u.RealName).FirstOrDefault()).ToArray(),
            datasets = new object[]
            {
                new
                {
                    type= "bar",
                    label= "P.T",
                    yAxisID= "y-axis-0",
                    backgroundColor= "rgba(184,227,243,.43)",
                    data= items.Select(g=>_model.PTLesson().Where(t=>t.AttendingCoach==g).Count()).ToArray(),
                },
                new
                {
                    type= "bar",
                    label= "P.I",
                    yAxisID= "y-axis-0",
                    backgroundColor= "rgba(255,7,7,.43)",
                    data= items.Select(g=>_model.Where(l => l.TrainingBySelf == 1).Where(t=>t.AttendingCoach==g).Count()).ToArray(),
                }
            }
        };
    }

</script>
