@using System.IO
@using System.Linq.Expressions

@using WebHome.Helper
@using WebHome.Models.Locale
@using WebHome.Models.ViewModel
@using WebHome.Models.DataEntity
@using WebHome.Controllers
@using Newtonsoft.Json
@{

    ModelStateDictionary _modelState;
    ModelSource<UserProfile> models;
    UserProfile _model;

    _modelState = (ModelStateDictionary)ViewBag.ModelState;
    models = ((SampleController<UserProfile>)ViewContext.Controller).DataSource;
    _model = (UserProfile)this.Model;
}
@{
    IQueryable<LessonTime> lessons = _model.UID.PromptLearnerLessons(models);
}
<ul class="nav nav-tabs-new2 darkteal p-t-0" id="tabs">
    <li class="nav-item"><a class="nav-link" data-toggle="tab" href="#previousmonth">上月</a></li>
    <li class="nav-item"><a class="nav-link active" data-toggle="tab" href="#thismonth">本月</a></li>
    <li class="nav-item"><a class="nav-link" data-toggle="tab" href="#nextmonth">次月</a></li>
</ul>
@{  Html.RenderPartial("~/Views/LearnerProfile/Module/LearnerLessonsReviewDetails.cshtml", _model);}
<script>
    var refreshEvents;
    $(function () {
        refreshEvents = function () {
            showLoading();
            $.post('@Html.Raw(Url.Action("LearnerLessonsReviewDetails", "LearnerProfile", new { KeyID = _model.UID.EncryptKey() }))', {}, function (data) {
                hideLoading();
                if ($.isPlainObject(data)) {
                    swal(data.message);
                } else {
                    var $tabs = $('#tabs');
                    $tabs.next('div').remove();
                    $tabs.after(data);
                }
            });
        }
    });
</script>
