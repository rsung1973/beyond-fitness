@using System.IO
@using System.Linq.Expressions

@using WebHome.Helper
@using WebHome.Models.Locale
@using WebHome.Models.ViewModel
@using WebHome.Models.DataEntity
@using WebHome.Controllers
@{

    ModelStateDictionary _modelState;
    ModelSource<UserProfile> models;
    LessonTime _model;

    _modelState = (ModelStateDictionary)ViewBag.ModelState;
    models = ((SampleController<UserProfile>)ViewContext.Controller).DataSource;
    _model = (LessonTime)this.Model;
}
@{
    UserProfile learner = (UserProfile)ViewBag.Learner;
    var plan = _model.AssertTrainingPlan(models, UID: learner.UID);
    var execution = plan.TrainingExecution;
}
@foreach (var item in models.GetTable<TrainingStage>())
{
    ViewBag.TrainingStage = item;
    Html.RenderPartial("~/Views/LearnerProfile/Module/LessonTrainingStage.cshtml", _model);
}
@if ((bool?)ViewBag.ViewOnly != true)
{
<script>

    function editStageTrainingItem(stageID, itemID) {
        showLoading();
        $.post('@Html.Raw(Url.Action("EditTrainingItem", "LearnerProfile", new { execution.ExecutionID }))', { 'stageID': stageID, 'itemID': itemID }, function (data) {
            hideLoading();
            if ($.isPlainObject(data)) {
                alert(data.message);
            } else {
                $(data).appendTo($('body'));
            }
        });
    }

    function editStageBreakInterval(stageID, itemID) {
        showLoading();
        $.post('@Html.Raw(Url.Action("EditBreakInterval", "LearnerProfile", new { execution.ExecutionID }))', { 'stageID': stageID, 'itemID': itemID }, function (data) {
            hideLoading();
            if ($.isPlainObject(data)) {
                alert(data.message);
            } else {
                $(data).appendTo($('body'));
            }
        });
    }


    $('.dd').on('change', function () {
        //var $this = $(this);
        //var serializedData = window.JSON.stringify($($this).nestable('serialize'));

        var itemID = [];
        $(this).find('[data-id]')
            .each(function (idx, elmt) {
                itemID.push($(this).data('id'));
            });

        showLoading();
        $.post('@Html.Raw(Url.Action("UpdateStageTrainingItemSequence", "Lessons"))', { 'itemID': itemID }, function (data) {
            hideLoading();
            if ($.isPlainObject(data)) {
                if (data.result) {
                } else {
                    swal(data.message);
                }
            } else {
                $(data).appendTo($('body'));
            }
        });
    });

</script>
}