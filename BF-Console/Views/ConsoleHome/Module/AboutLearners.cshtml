
@using System.IO
@using System.Linq.Expressions

@using WebHome.Helper
@using WebHome.Models.Locale
@using WebHome.Models.ViewModel
@using WebHome.Models.DataEntity
@using WebHome.Controllers
<div class="container-fluid">
    <div class="row clearfix">
        <h4 class="card-outbound-header m-l-15">我的學生 
            @{ var items = _model.ServingCoach.PromptLearnerWithBirthday(models);}
 @if (items.Count() > 0)
                {
            <i class="zmdi livicon-evo" data-options="name: gift.svg; size: 30px; style: original; strokeWidth:2px;"></i>
            }
        </h4>
        <div class="col-lg-12 col-md-12">
            <div class="row clearfix">
                <div class="col-12">
                    <div class="row clearfix">
                        <div class="col-12">
                            <ul class="row profile_state list-unstyled">
                                <li class="col-sm-4 col-6">
                                    <div class="card info-box-2 hover-zoom-effect">
                                        <div class="icon"></div>
                                        <div class="content">
                                            <div class="icon"><i class="zmdi livicon-evo" data-options="name: notebook.svg; size: 40px; style: original; strokeWidth:2px;"></i></div>
                                            <div class="text">待續約學生</div>
                                            <div class="number col-red">?</div>
                                        </div>
                                    </div>
                                </li>
                                @{ var lessons = models.GetTable<RegisterLesson>().Where(r => r.AdvisorID == _model.UID);
                                    var readyLessons = lessons.Where(r => r.Attended == (int)Naming.LessonStatus.準備上課);
                                    var awardingCount = readyLessons.Where(r => models.GetTable<AwardingLesson>().Any(a => a.RegisterID == r.RegisterID)).Count()
                                                + readyLessons.Where(r => models.GetTable<AwardingLessonGift>().Any(a => a.RegisterID == r.RegisterID)).Count();}

                                <li class="col-sm-4 col-6 calendar-todolist">
                                    <div class="card info-box-2 hover-zoom-effect">
                                        <div class="icon"><i>
                                            <img src="images/lesson/stage1-girl-clear.png" width="75px"></i></div>
                                        <div class="content">
                                            <div class="text">兌換裝備 - P.T Session</div>
                                            <div class="number">@(awardingCount)</div>
                                        </div>
                                    </div>
                                </li>
                                @{ DateTime firstDay = DateTime.Today.FirstDayOfMonth();
                                    var attendedLessons = models.GetTable<LessonTime>()
                                            .Where(l => l.AttendingCoach == _model.UID)
                                            .Where(l => l.LessonAttendance != null);
                                    var currentAttendedLessons = attendedLessons
                                            .Where(l => l.ClassTime >= firstDay)
                                            .Where(l => l.ClassTime < DateTime.Today.AddDays(1))
                                            .Join(models.GetTable<GroupingLesson>(), l => l.GroupID, g => g.GroupID, (l, g) => g)
                                            .Join(lessons, g => g.GroupID, r => r.RegisterGroupID, (g, r) => r)
                                            .GroupBy(r => r.UID).Count();
                                    var attendedLessonsLastMonth = attendedLessons
                                            .Where(l => l.ClassTime >= firstDay.AddMonths(-1))
                                            .Where(l => l.ClassTime < firstDay)
                                            .Join(models.GetTable<GroupingLesson>(), l => l.GroupID, g => g.GroupID, (l, g) => g)
                                            .Join(lessons, g => g.GroupID, r => r.RegisterGroupID, (g, r) => r)
                                            .GroupBy(r => r.UID).Count();}

                                <li class="col-sm-4 col-6 calendar-todolist">
                                    <div class="card info-box-2">
                                        <div class="content">
                                            <div id="sparkline-pie" class="sparkline-pie">@(attendedLessonsLastMonth),@(currentAttendedLessons)</div>
                                            <div class="text">本月V.S.上月上課學生</div>
                                            <div class="number"><span class="col-grey">@(attendedLessonsLastMonth)</span> / <span class="col-amber">@(currentAttendedLessons)</span></div>
                                        </div>
                                        <script>
                                            //我的學生
                                            $('#sparkline-pie').sparkline('html', {
                                                type: 'pie',
                                                offset: 90,
                                                width: '75px',
                                                height: '75px',
                                                sliceColors: ['#cbd1d9', '#ffe6aa']
                                            });
                                        </script>
                                    </div>
                                </li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@{

    ModelStateDictionary _modelState;
    ModelSource<UserProfile> models;
    UserProfile _model;

    
    
        _modelState = (ModelStateDictionary)ViewBag.ModelState;
        models = ((SampleController<UserProfile>)ViewContext.Controller).DataSource;
        _model = (UserProfile)this.Model;
    }
