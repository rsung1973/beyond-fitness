
@using System.IO
@using System.Linq.Expressions

@using WebHome.Helper
@using WebHome.Models.Locale
@using WebHome.Models.ViewModel
@using WebHome.Models.DataEntity
@using WebHome.Controllers
@{

    ModelStateDictionary _modelState;
    ModelSource<UserProfile> models;
    LessonTime _model;
    CalendarEventQueryViewModel _viewModel;
    String _dialogID = $"other{DateTime.Now.Ticks}";
    TrainingPlan plan;



    _modelState = (ModelStateDictionary)ViewBag.ModelState;
    models = ((SampleController<UserProfile>)ViewContext.Controller).DataSource;
    _model = (LessonTime)this.Model;
    _viewModel = (CalendarEventQueryViewModel)ViewBag.ViewModel;
    plan = _model.AssertTrainingPlan(models);
}
<div class="modal fade" id="@(_dialogID)" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-sm" role="document">
        <div class="modal-content">
            <div class="member-card">
                <a class="closebutton" data-dismiss="modal"></a>
                <div class="header g-bg-darkteal">
                    <h4 class="m-t-0 p-t-10">@(_model.RegisterLesson.UserProfile.FullName())</h4>
                </div>
                <div class="member-img">
                    <a href="profile.html" class="">
                        @{
                            ViewBag.ProfileClass = "rounded-circle popfit";
                            Html.RenderPartial("~/Views/Common/ProfileImage.cshtml", _model.RegisterLesson.UserProfile);
                        }
                    </a>
                </div>
                <div class="body">
                    <div class="col-12">
                        <p class="text-muted">@(_model.FullLessonDuration())</p>
                        <address>@(_model.LessonTypeStatus()) <i class="zmdi zmdi-pin"></i>@(_model.BranchID.HasValue ? _model.BranchStore.BranchName : _model.Place)</address>
                        @if (_model.GroupingLesson.RegisterLesson.Count > 1)
                        {
                            <ul class="list-unstyled team-info margin-0">
                                @foreach (var r in _model.GroupingLesson.RegisterLesson)
                                {
                                    <li>
                                        @{
                                            ViewBag.ProfileClass = "popfit";
                                            Html.RenderPartial("~/Views/Common/ProfileImage.cshtml", r.UserProfile);
                                        }
                                    </li>
                                }
                            </ul>
                        }
                    </div>
                    <hr>
                    @{ Html.RenderPartial("~/Views/ConsoleEvent/Module/LessonEmphasis.cshtml", _model);}

                </div>
            </div>
            <div class="modal-footer">
                @*<button type="button" class="btn btn-darkteal btn-round waves-effect" onclick="javascript:$('').launchDownload('@Html.Raw(Url.Action("LessonTrainingContent", "ConsoleHome",new { LearnerID = _model.RegisterLesson.UID }))', {'keyID':'@(_model.LessonID.EncryptKey())' });"><i class="zmdi zmdi-edit"></i></button>*@
                <button type="button" class="btn btn-darkteal btn-round waves-effect" onclick="javascript:$('').launchDownload('@Html.Raw(Url.Action("LearnerProfile","ConsoleHome"))', { 'keyID': '@(_model.RegisterLesson.UID.EncryptKey())' });"><i class="zmdi zmdi-edit"></i></button>
                <button type="button" class="btn btn-simple btn-round waves-effect" onclick="commitEmphasis('@(plan.ExecutionID.EncryptKey())');">更新重點</button>
                @{ Html.RenderPartial("~/Views/ConsoleEvent/Module/RevokeLesson.cshtml", _model);}

            </div>
        </div>
    </div>
    @{ Html.RenderPartial("~/Views/ConsoleHome/Shared/BSModalScript.cshtml", model: _dialogID);}

</div>

