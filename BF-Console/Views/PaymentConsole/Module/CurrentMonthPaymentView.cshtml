@using System.IO
@using System.Linq.Expressions

@using WebHome.Helper
@using WebHome.Models.Locale
@using WebHome.Models.ViewModel
@using WebHome.Models.DataEntity
@using WebHome.Controllers
@using Newtonsoft.Json
@{
    ModelStateDictionary _modelState;
    ModelSource<UserProfile> models;
    IQueryable<Payment> _model;
    _modelState = (ModelStateDictionary)ViewBag.ModelState;
    models = ((SampleController<UserProfile>)ViewContext.Controller).DataSource;
    _model = (IQueryable<Payment>)this.Model;
}
@{
    String _chartID = $"paymentDonut{DateTime.Now.Ticks}";

    UserProfile _profile = Context.GetUser();
    PaymentQueryViewModel _viewModel = (PaymentQueryViewModel)ViewBag.ViewModel;
    DateTime dateFrom = DateTime.Today.FirstDayOfMonth();
    _viewModel.PayoffDateFrom = dateFrom;

    IQueryable<Payment> items = null;
    IQueryable<Payment> lastMonthItems;

    if (_viewModel.BranchID.HasValue)
    {
        items = _model.Where(p => p.PayoffDate >= dateFrom)
           .Where(p => p.VoidPayment == null)
           .Where(p => p.PaymentTransaction.BranchID == _viewModel.BranchID);
        lastMonthItems = models.GetTable<Payment>()
           .Where(p => p.PayoffDate >= dateFrom.AddMonths(-1))
           .Where(p => p.PayoffDate < dateFrom)
           .Where(p => p.VoidPayment == null)
           .Where(p => p.PaymentTransaction.BranchID == _viewModel.BranchID);

    }
    else
    {
        items = _model.Where(p => p.PayoffDate >= dateFrom)
           .Where(p => p.VoidPayment == null);

        lastMonthItems = models.GetTable<Payment>()
           .Where(p => p.PayoffDate >= dateFrom.AddMonths(-1))
           .Where(p => p.PayoffDate < dateFrom)
           .Where(p => p.VoidPayment == null);
    }

}
<div class="card">
   <div class="header">
      <h2><strong>本月總計</strong>
        @{
            ViewBag.Other = "全部";
            Html.RenderPartial("~/Views/Common/BranchStoreWithOther.cshtml", models.GetTable<BranchStore>().Where(b => b.BranchID == _viewModel.BranchID).FirstOrDefault());
        }
      </h2>
       <ul class="header-dropdown">
                <li class="dropdown">
                    <a href="javascript:void(0);" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false"> <i class="zmdi zmdi-swap"></i> </a>
                    <ul class="dropdown-menu dropdown-menu-right slideUp float-right">
                        <li>
                            <a onclick='reloadPaymentView(@Html.Raw(JsonConvert.SerializeObject(
                                    new
                                    {
                                        _viewModel.PayoffDateFrom,
                                        BranchID = (String)null,
                                    })));'>全部</a>
                        </li>
                        @foreach (var item in models.GetTable<BranchStore>())
                        {
                            <li>
                                <a onclick='reloadPaymentView(@Html.Raw(JsonConvert.SerializeObject(
                                    new
                                    {
                                        _viewModel.PayoffDateFrom,
                                        BranchID = item.BranchID,
                                    })));'>@(item.BranchName)</a>
                                </li>
                        }
                    </ul>
                </li>
            </ul>      
   </div>
   <ul class="row clearfix list-unstyled m-b-0 widget_3">
      <li class="col-lg-7 col-md-7 col-sm-12">
         <div class="body">
            <div class="row clearfix">
               <div class="col-lg-5 col-md-4 col-sm-6 col-12">
                  @if (items.Count() > 0)
                    {
                        <div id="@(_chartID)" class="dashboard-donut-chart small"></div>
                    }
                    else
                    {
                        <div class="pie_chart">
                            <div class="pie_light">
                                目前沒有<br />
                                <span>收款資料</span>
                            </div>
                        </div>
                    }
               </div>
               <div class="col-lg-7 col-md-8 col-sm-6 col-12">
                  <table class="table m-t-15 m-b-0">
                     <tbody>
                        <tr onclick='showPaymentList(@Html.Raw(JsonConvert.SerializeObject(
                                    new
                                    {
                                        _viewModel.PayoffDateFrom,
                                        _viewModel.BranchID,
                                        IsCancelled = false,
                                    })));'>
                                @{
                                    var totalPayoff = items.Sum(p => p.PayoffAmount) ?? 0;
                                }
                                <td>收款</td>
                                <td class="text-right">@($"{totalPayoff:##,###,###,##0}")</td>
                                <td>@showIntent(totalPayoff, lastMonthItems.Sum(p => p.PayoffAmount) ?? 0)</td>
                            </tr>
                            <tr onclick='showPaymentList(@Html.Raw(JsonConvert.SerializeObject(
                                    new
                                    {
                                        _viewModel.PayoffDateFrom,
                                        _viewModel.BranchID,
                                        TransactionType = (int)Naming.PaymentTransactionType.體能顧問費,
                                        IsCancelled = false,
                                    })));'>
                                @{
                                    var PTItems = items.Where(p => p.TransactionType == (int)Naming.PaymentTransactionType.體能顧問費);
                                    var PTPayoff = PTItems.Sum(p => p.PayoffAmount) ?? 0;
                                }
                                <td>P.T session</td>
                                <td class="text-right">@($"{PTPayoff:##,###,###,##0}")</td>
                                <td>@showIntent(PTPayoff, lastMonthItems.Where(p => p.TransactionType == (int)Naming.PaymentTransactionType.體能顧問費).Sum(p => p.PayoffAmount) ?? 0)</td>
                            </tr>
                            <tr onclick='showPaymentList(@Html.Raw(JsonConvert.SerializeObject(
                                    new
                                    {
                                        _viewModel.PayoffDateFrom,
                                        _viewModel.BranchID,
                                        TransactionType = (int)Naming.PaymentTransactionType.自主訓練,
                                        IsCancelled = false,
                                    })));'>
                                @{
                                    var PIPayoff = items.Where(p => p.TransactionType == (int)Naming.PaymentTransactionType.自主訓練).Sum(p => p.PayoffAmount) ?? 0;
                                }
                                <td>P.I session</td>
                                <td class="text-right">@($"{PIPayoff:##,###,###,##0}")</td>
                                <td>@showIntent(PIPayoff, lastMonthItems.Where(p => p.TransactionType == (int)Naming.PaymentTransactionType.自主訓練).Sum(p => p.PayoffAmount) ?? 0)</td>
                            </tr>
                            <tr onclick='showPaymentList(@Html.Raw(JsonConvert.SerializeObject(
                                    new
                                    {
                                        _viewModel.PayoffDateFrom,
                                        _viewModel.BranchID,
                                        TransactionType = (int)Naming.PaymentTransactionType.食飲品,
                                        IsCancelled = false,
                                    })));'>
                                @{
                                    var foodsPayoff = items.Where(p => p.TransactionType == (int)Naming.PaymentTransactionType.食飲品).Sum(p => p.PayoffAmount) ?? 0;
                                }
                                <td>食飲品</td>
                                <td class="text-right">@($"{foodsPayoff:##,###,###,##0}") </td>
                                <td>@showIntent(foodsPayoff, lastMonthItems.Where(p => p.TransactionType == (int)Naming.PaymentTransactionType.食飲品).Sum(p => p.PayoffAmount) ?? 0)</td>
                            </tr>
                            <tr onclick='showPaymentList(@Html.Raw(JsonConvert.SerializeObject(
                                    new
                                    {
                                        _viewModel.PayoffDateFrom,
                                        _viewModel.BranchID,
                                        TransactionType = (int)Naming.PaymentTransactionType.運動商品,
                                        IsCancelled = false,
                                    })));'>
                                @{
                                    var itemsPayoff = items.Where(p => p.TransactionType == (int)Naming.PaymentTransactionType.運動商品).Sum(p => p.PayoffAmount) ?? 0;
                                }
                                <td>運動商品</td>
                                <td class="text-right">@($"{itemsPayoff:##,###,###,##0}")</td>
                                <td>@showIntent(itemsPayoff, lastMonthItems.Where(p => p.TransactionType == (int)Naming.PaymentTransactionType.運動商品).Sum(p => p.PayoffAmount) ?? 0)</td>
                            </tr>
                     </tbody>
                  </table>
               </div>
                @if (totalPayoff > 0)
                {
                    <script>
                            $(function () {
                                Morris.Donut({
                                    element: '@(_chartID)',
                                    data: [{
                                        label: 'P.T session',
                                        value: @Math.Round(PTPayoff*100m/totalPayoff)
                                    }, {
                                        label: 'P.I session',
                                        value: @Math.Round(PIPayoff*100m/totalPayoff)
                                    }, {
                                        label: '食飲品',
                                        value: @Math.Round(foodsPayoff*100m/totalPayoff)
                                    }, {
                                        label: '運動商品',
                                        value: @Math.Round(itemsPayoff*100m/totalPayoff)
                                    }],
                                    colors: ['#ffe699', '#edbae7', '#93e3ff', '#cbd1d9',],
                                    formatter: function (y) {
                                        return y + '%'
                                    }
                                });
                            });
                    </script>

                }
            </div>
         </div>
      </li>
      <li class="col-lg-5 col-md-5 col-sm-12">
         <div class="body">
            <table class="table m-t-15 m-b-0">
               <tbody>
                  <tr onclick='showPaymentList(@Html.Raw(JsonConvert.SerializeObject(
                                    new
                                    {
                                        _viewModel.PayoffDateFrom,
                                        _viewModel.BranchID,
                                        IsCancelled = false,
                                        HasShare = false,
                                    })));'>
                        <td class="col-pink">未分潤</td>
                        <td class="text-right">@($"{totalPayoff - (items.GetPaymentAchievement(models).Sum(t => t.ShareAmount) ?? 0):##,###,###,##0}")</td>
                    </tr>
                    <tr onclick='showPaymentList(@Html.Raw(JsonConvert.SerializeObject(
                                    new
                                    {
                                        _viewModel.PayoffDateFrom,
                                        _viewModel.BranchID,
                                        TransactionType = (int)Naming.PaymentTransactionType.體能顧問費,
                                        IsCancelled = false,
                                        HasShare = false,
                                    })));'>
                        <td>P.T session</td>
                        <td class="text-right">@($"{PTPayoff - (items.Where(p => p.TransactionType == (int)Naming.PaymentTransactionType.體能顧問費).GetPaymentAchievement(models).Sum(t => t.ShareAmount) ?? 0):##,###,###,##0}")</td>
                    </tr>
                    <tr onclick='showPaymentList(@Html.Raw(JsonConvert.SerializeObject(
                                    new
                                    {
                                        _viewModel.PayoffDateFrom,
                                        _viewModel.BranchID,
                                        TransactionType = (int)Naming.PaymentTransactionType.自主訓練,
                                        IsCancelled = false,
                                        HasShare = false,
                                    })));'>
                        <td>P.I session</td>
                        <td class="text-right">@($"{PIPayoff - (items.Where(p => p.TransactionType == (int)Naming.PaymentTransactionType.自主訓練).GetPaymentAchievement(models).Sum(t => t.ShareAmount) ?? 0):##,###,###,##0}")</td>
                    </tr>
                    <tr onclick='showPaymentList(@Html.Raw(JsonConvert.SerializeObject(
                                    new
                                    {
                                        _viewModel.PayoffDateFrom,
                                        _viewModel.BranchID,
                                        TransactionType = (int)Naming.PaymentTransactionType.食飲品,
                                        IsCancelled = false,
                                        HasShare = false,
                                    })));'>
                        <td>食飲品</td>
                        <td class="text-right">@($"{foodsPayoff - (items.Where(p => p.TransactionType == (int)Naming.PaymentTransactionType.食飲品).GetPaymentAchievement(models).Sum(t => t.ShareAmount) ?? 0):##,###,###,##0}")</td>
                    </tr>
                    <tr onclick='showPaymentList(@Html.Raw(JsonConvert.SerializeObject(
                                    new
                                    {
                                        _viewModel.PayoffDateFrom,
                                        _viewModel.BranchID,
                                        TransactionType = (int)Naming.PaymentTransactionType.運動商品,
                                        IsCancelled = false,
                                        HasShare = false,
                                    })));'>
                        <td>運動商品</td>
                        <td class="text-right">@($"{itemsPayoff - (items.Where(p => p.TransactionType == (int)Naming.PaymentTransactionType.運動商品).GetPaymentAchievement(models).Sum(t => t.ShareAmount) ?? 0):##,###,###,##0}")</td>
                    </tr>
               </tbody>
            </table>
         </div>
      </li>
   </ul>
</div>

@helper showIntent(int a1, int a2)
{
    if (a1 > a2)
    {
        <i class="zmdi zmdi-caret-up text-danger"></i>
    }
    else if (a1 < a2)
    {
        <i class="zmdi zmdi-caret-down text-success"></i>
    }
}
