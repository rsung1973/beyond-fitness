

@using System.IO
@using System.Linq.Expressions

@using WebHome.Helper
@using WebHome.Models.Locale
@using WebHome.Models.ViewModel
@using WebHome.Models.DataEntity
@using WebHome.Controllers
@using Newtonsoft.Json
@using Utility
@{
    ModelSource<UserProfile> models;
    ModelStateDictionary _modelState;
    IQueryable<MonthlyCoachRevenueIndicator> _model;
    MonthlyCoachRevenueIndicatorQueryViewModel _viewModel;

    models = ((SampleController<UserProfile>)ViewContext.Controller).DataSource;
    _modelState = (ModelStateDictionary)ViewBag.ModelState;
    _model = (IQueryable<MonthlyCoachRevenueIndicator>)this.Model;
    _viewModel = (MonthlyCoachRevenueIndicatorQueryViewModel)ViewBag.ViewModel;

    var items = _model.ToArray();
    ;
}

<script>

    //指定圖表的配置項和資料
    $global.echarts.option = {
        tooltip: {
            trigger: 'axis',
            axisPointer: {
                type: 'cross',
                crossStyle: {
                    color: '#999'
                }
            }
        },
        toolbox: {
            feature: {
                magicType: { show: true, type: ['line', 'bar'] },
                restore: { show: true },
                saveAsImage: { show: true }
            }
        },
        legend: {
            data: ['收款金額', '上課數']
        },
        xAxis: [
            {
                type: 'category',
                data: @Html.Raw(items.Select(c => $"{c.MonthlyIndicator.StartDate:yyyyMM}").ToArray().JsonStringify()),
                axisPointer: {
                    type: 'shadow'
                }
            }
        ],
        yAxis: [
            {
                type: 'value',
                name: '金額',
                min: 0,
                max: 600000,
                axisLabel: {
                    formatter: '{value} 元'
                }
            },
            {
                type: 'value',
                name: '上課數',
                min: 0,
                axisLabel: {
                    formatter: '{value} 堂'
                }
            }
        ],
        series: [
            {
                name: '收款金額',
                type: 'bar',
                label: {
                    normal: {
                        formatter: function (v) {
                            var str = v.value.toString();
                            let reg = str.indexOf(".") > -1 ? /(\d)(?=(\d{3})+\.)/g : /(\d)(?=(?:\d{3})+$)/g;
                            return str.replace(reg, "$1,");
                        }
                    },
                    formatter: function (v) {
                        var str = v.value.toString();
                        let reg = str.indexOf(".") > -1 ? /(\d)(?=(\d{3})+\.)/g : /(\d)(?=(?:\d{3})+$)/g;
                        return str.replace(reg, "$1,");
                    }
                },
                data: @Html.Raw(items.Select(c => c.MonthlyIndicator.GetPaymentAchievementSummary(models, c.CoachID)).JsonStringify()),
            },
            {
                name: '上課數',
                type: 'line',
                yAxisIndex: 1,
                data: @Html.Raw(items.Select(c => c.AttendanceCount).JsonStringify()),
            }
        ],
        color: ['#d87a80', '#2ec7c9']
    };

</script>