
@using System.IO
@using System.Linq.Expressions

@using WebHome.Helper
@using WebHome.Models.Locale
@using WebHome.Models.ViewModel
@using WebHome.Models.DataEntity
@using WebHome.Controllers
@using Newtonsoft.Json
@{

    ModelStateDictionary _modelState;
    ModelSource<UserProfile> models;
    MonthlyCoachRevenueIndicatorQueryViewModel _viewModel;
    String _dialogID = $"coach{DateTime.Now.Ticks}";
    String _chartID = $"barChart{DateTime.Now.Ticks}";

    _modelState = (ModelStateDictionary)ViewBag.ModelState;
    models = ((SampleController<UserProfile>)ViewContext.Controller).DataSource;
    _viewModel = (MonthlyCoachRevenueIndicatorQueryViewModel)ViewBag.ViewModel;
}
@{
    MonthlyIndicator _model = (MonthlyIndicator)this.Model;
    var coaches = models.GetTable<MonthlyCoachRevenueIndicator>().Where(r => r.PeriodID == _model.PeriodID);
    IQueryable<ServingCoach> items = null;
    if (_viewModel.CoachID.HasValue)
    {
        items = models.GetTable<ServingCoach>().Where(c => c.CoachID == ((MonthlyCoachRevenueIndicatorQueryViewModel)_viewModel).CoachID);
    }
    else
    {
        items = models.PromptEffectiveCoach().Where(c => !coaches.Any(r => r.CoachID == c.CoachID));
        if (_viewModel.BranchID.HasValue)
        {
            items = items.Join(models.GetTable<CoachWorkplace>().Where(w => w.BranchID == _viewModel.BranchID), c => c.CoachID, w => w.CoachID, (c, w) => c);
        }
    }
}
@{
    ViewBag.HeaderRaw = showHeader();
    ViewBag.InsertPartial = "~/Views/BusinessConsole/Module/CoachAchievementGoal.cshtml";
    ViewBag.SelectAll = false;
    ViewBag.EnableClose = false;
    ViewBag.EnableSearch = !_viewModel.CoachID.HasValue;
    ViewBag.Allotment = 1;
    ViewBag.AllotmentCoach = 4;
    if (_viewModel.CoachID.HasValue)
    {
        ViewBag.InsertFooter = "~/Views/BusinessConsole/Module/ConfirmToDeleteCoachRevenueIndicator.cshtml";
    }
    Html.RenderPartial("~/Views/ContractConsole/ContractModal/SelectCoach.cshtml", items);
}
@helper showHeader()
{

}

<script>
    $(function () {
        $global.commitCoach = function (coachID, coachName, $dialog) {
            var viewModel = $dialog.find('input,select,textArea').serializeObject();
            viewModel.coachID = coachID;
            clearErrors();
            showLoading();
            $.post('@Html.Raw(Url.Action("CommitCoachRevenueIndicator", "BusinessConsole", new { KeyID = _model.PeriodID.EncryptKey(),_viewModel.BranchID,_viewModel.DataOperation }))', viewModel, function (data) {
                hideLoading();
                if ($.isPlainObject(data)) {
                    if (data.result) {
                        $dialog.modal('hide');
                        refreshCoachIndicatorList();
                    } else {
                        swal(data.message);
                    }
                } else {
                    $(data).appendTo($('body')).remove();
                }
            });
        };
    });
</script>