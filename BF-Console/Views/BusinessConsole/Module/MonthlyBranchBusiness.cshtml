
@using System.IO
@using System.Linq.Expressions

@using WebHome.Helper
@using WebHome.Models.Locale
@using WebHome.Models.ViewModel
@using WebHome.Models.DataEntity
@using WebHome.Controllers
@using Newtonsoft.Json
@{
    ModelStateDictionary _modelState;
    ModelSource<UserProfile> models;
    MonthlyIndicator _model;
    _modelState = (ModelStateDictionary)ViewBag.ModelState;
    models = ((SampleController<UserProfile>)ViewContext.Controller).DataSource;
    _model = (MonthlyIndicator)this.Model;
    String _viewID = $"strategy{DateTime.Now.Ticks}";
}
@{
    MonthlyIndicatorQueryViewModel _viewModel = (MonthlyIndicatorQueryViewModel)ViewBag.ViewModel;
    MonthlyBranchIndicator item = _model.MonthlyBranchIndicator.Where(i => i.BranchID == _viewModel.BranchID).FirstOrDefault();
}
@if (item != null)
{
    <div class="dotdotdot">
        <div id="comment">
            <h4><strong class="col-grey">策略與總結</strong> <a href="javascript:makeStrategy();" class="text-gray"><i class="zmdi zmdi-edit"></i></a></h4>
            @{
                Html.RenderPartial("~/Views/BusinessConsole/Module/MonthlyBranchStrategyAnalysis.cshtml", _model);
            }
                @*<ul class="list-unstyled col-grey" id="@(_viewID)">
                @{
                    Html.RenderPartial("~/Views/BusinessConsole/Module/StrategyAnalysis.cshtml", _model);
                }
            </ul>*@
                <a class="toggle" href="#"></a>
            </div>
    </div>
}

<script>
    $(function () {
        /*
			Toggle full story example
		*/
        var xmpl = document.querySelector('#comment');
        var dot = new Dotdotdot(xmpl, {

            // Prevents the <a class="toggle" /> from being removed
            keep: '.toggle'

        })

        // Get the dotdotdot API
        var api = dot.API;

        xmpl.addEventListener('click', (evnt) => {
            if (evnt.target.closest('.toggle')) {
                evnt.preventDefault();

                //	When truncated, restore
                if (xmpl.matches('.ddd-truncated')) {
                    api.restore();
                    xmpl.classList.add('full-story');
                }

                //	Not truncated, truncate
                else {
                    xmpl.classList.remove('full-story');
                    api.truncate();
                    api.watch();
                }
            }
        });
    });
</script>